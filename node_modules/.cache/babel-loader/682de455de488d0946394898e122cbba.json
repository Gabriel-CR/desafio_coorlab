{"ast":null,"code":"import _asyncToGenerator from \"/home/gabriel/Documentos/desafio_coorlab/code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _typeof from \"/home/gabriel/Documentos/desafio_coorlab/code/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/es.global-this.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.reflect.set.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n\n/*!\n  * pinia v2.1.3\n  * (c) 2023 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { hasInjectionContext, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, getCurrentScope, onScopeDispose, getCurrentInstance, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n/**\n * setActivePinia must be called to handle SSR at the top of functions like\n * `fetch`, `setup`, `serverPrefetch` and others\n */\n\nvar activePinia;\n/**\n * Sets or unsets the active pinia. Used in SSR and internally when calling\n * actions and getters\n *\n * @param pinia - Pinia instance\n */\n// @ts-expect-error: cannot constrain the type of the return\n\nvar setActivePinia = function setActivePinia(pinia) {\n  return activePinia = pinia;\n};\n/**\n * Get the currently active pinia if there is any.\n */\n\n\nvar getActivePinia = function getActivePinia() {\n  return hasInjectionContext() && inject(piniaSymbol) || activePinia;\n};\n\nvar piniaSymbol = process.env.NODE_ENV !== 'production' ? Symbol('pinia') :\n/* istanbul ignore next */\nSymbol();\n\nfunction isPlainObject( // eslint-disable-next-line @typescript-eslint/no-explicit-any\no) {\n  return o && _typeof(o) === 'object' && Object.prototype.toString.call(o) === '[object Object]' && typeof o.toJSON !== 'function';\n} // type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\n// TODO: can we change these to numbers?\n\n/**\n * Possible types for SubscriptionCallback\n */\n\n\nvar MutationType;\n\n(function (MutationType) {\n  /**\n   * Direct mutation of the state:\n   *\n   * - `store.name = 'new name'`\n   * - `store.$state.name = 'new name'`\n   * - `store.list.push('new item')`\n   */\n  MutationType[\"direct\"] = \"direct\";\n  /**\n   * Mutated the state with `$patch` and an object\n   *\n   * - `store.$patch({ name: 'newName' })`\n   */\n\n  MutationType[\"patchObject\"] = \"patch object\";\n  /**\n   * Mutated the state with `$patch` and a function\n   *\n   * - `store.$patch(state => state.name = 'newName')`\n   */\n\n  MutationType[\"patchFunction\"] = \"patch function\"; // maybe reset? for $state = {} and $reset\n})(MutationType || (MutationType = {}));\n\nvar IS_CLIENT = typeof window !== 'undefined';\n/**\n * Should we add the devtools plugins.\n * - only if dev mode or forced through the prod devtools flag\n * - not in test\n * - only if window exists (could change in the future)\n */\n\nvar USE_DEVTOOLS = (process.env.NODE_ENV !== 'production' || typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__) && !(process.env.NODE_ENV === 'test') && IS_CLIENT;\n/*\n * FileSaver.js A saveAs() FileSaver implementation.\n *\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\n * Morote.\n *\n * License : MIT\n */\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\n\nvar _global = /*#__PURE__*/function () {\n  return (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' && window.window === window ? window : (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === 'object' && self.self === self ? self : (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) === 'object' && global.global === global ? global : (typeof globalThis === \"undefined\" ? \"undefined\" : _typeof(globalThis)) === 'object' ? globalThis : {\n    HTMLElement: null\n  };\n}();\n\nfunction bom(blob) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$autoBom = _ref.autoBom,\n      autoBom = _ref$autoBom === void 0 ? false : _ref$autoBom;\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xfeff), blob], {\n      type: blob.type\n    });\n  }\n\n  return blob;\n}\n\nfunction download(url, name, opts) {\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', url);\n  xhr.responseType = 'blob';\n\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts);\n  };\n\n  xhr.onerror = function () {\n    console.error('could not download file');\n  };\n\n  xhr.send();\n}\n\nfunction corsEnabled(url) {\n  var xhr = new XMLHttpRequest(); // use sync to avoid popup blocker\n\n  xhr.open('HEAD', url, false);\n\n  try {\n    xhr.send();\n  } catch (e) {}\n\n  return xhr.status >= 200 && xhr.status <= 299;\n} // `a.click()` doesn't work for all browsers (#465)\n\n\nfunction click(node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'));\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents');\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n    node.dispatchEvent(evt);\n  }\n}\n\nvar _navigator = (typeof navigator === \"undefined\" ? \"undefined\" : _typeof(navigator)) === 'object' ? navigator : {\n  userAgent: ''\n}; // Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\n\n\nvar isMacOSWebView = /*#__PURE__*/function () {\n  return /Macintosh/.test(_navigator.userAgent) && /AppleWebKit/.test(_navigator.userAgent) && !/Safari/.test(_navigator.userAgent);\n}();\n\nvar saveAs = !IS_CLIENT ? function () {} // noop\n: // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\ntypeof HTMLAnchorElement !== 'undefined' && 'download' in HTMLAnchorElement.prototype && !isMacOSWebView ? downloadSaveAs : // Use msSaveOrOpenBlob as a second approach\n'msSaveOrOpenBlob' in _navigator ? msSaveAs : // Fallback to using FileReader and a popup\nfileSaverSaveAs;\n\nfunction downloadSaveAs(blob) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'download';\n  var opts = arguments.length > 2 ? arguments[2] : undefined;\n  var a = document.createElement('a');\n  a.download = name;\n  a.rel = 'noopener'; // tabnabbing\n  // TODO: detect chrome extensions & packaged apps\n  // a.target = '_blank'\n\n  if (typeof blob === 'string') {\n    // Support regular links\n    a.href = blob;\n\n    if (a.origin !== location.origin) {\n      if (corsEnabled(a.href)) {\n        download(blob, name, opts);\n      } else {\n        a.target = '_blank';\n        click(a);\n      }\n    } else {\n      click(a);\n    }\n  } else {\n    // Support blobs\n    a.href = URL.createObjectURL(blob);\n    setTimeout(function () {\n      URL.revokeObjectURL(a.href);\n    }, 4e4); // 40s\n\n    setTimeout(function () {\n      click(a);\n    }, 0);\n  }\n}\n\nfunction msSaveAs(blob) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'download';\n  var opts = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (typeof blob === 'string') {\n    if (corsEnabled(blob)) {\n      download(blob, name, opts);\n    } else {\n      var a = document.createElement('a');\n      a.href = blob;\n      a.target = '_blank';\n      setTimeout(function () {\n        click(a);\n      });\n    }\n  } else {\n    // @ts-ignore: works on windows\n    navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n  }\n}\n\nfunction fileSaverSaveAs(blob, name, opts, popup) {\n  // Open a popup immediately do go around popup blocker\n  // Mostly only available on user interaction and the fileReader is async so...\n  popup = popup || open('', '_blank');\n\n  if (popup) {\n    popup.document.title = popup.document.body.innerText = 'downloading...';\n  }\n\n  if (typeof blob === 'string') return download(blob, name, opts);\n  var force = blob.type === 'application/octet-stream';\n\n  var isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\n\n  var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n\n  if ((isChromeIOS || force && isSafari || isMacOSWebView) && typeof FileReader !== 'undefined') {\n    // Safari doesn't allow downloading of blob URLs\n    var reader = new FileReader();\n\n    reader.onloadend = function () {\n      var url = reader.result;\n\n      if (typeof url !== 'string') {\n        popup = null;\n        throw new Error('Wrong reader.result type');\n      }\n\n      url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\n      if (popup) {\n        popup.location.href = url;\n      } else {\n        location.assign(url);\n      }\n\n      popup = null; // reverse-tabnabbing #460\n    };\n\n    reader.readAsDataURL(blob);\n  } else {\n    var url = URL.createObjectURL(blob);\n    if (popup) popup.location.assign(url);else location.href = url;\n    popup = null; // reverse-tabnabbing #460\n\n    setTimeout(function () {\n      URL.revokeObjectURL(url);\n    }, 4e4); // 40s\n  }\n}\n/**\n * Shows a toast or console.log\n *\n * @param message - message to log\n * @param type - different color of the tooltip\n */\n\n\nfunction toastMessage(message, type) {\n  var piniaMessage = '🍍 ' + message;\n\n  if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\n    __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\n  } else if (type === 'error') {\n    console.error(piniaMessage);\n  } else if (type === 'warn') {\n    console.warn(piniaMessage);\n  } else {\n    console.log(piniaMessage);\n  }\n}\n\nfunction isPinia(o) {\n  return '_a' in o && 'install' in o;\n}\n\nfunction checkClipboardAccess() {\n  if (!('clipboard' in navigator)) {\n    toastMessage(\"Your browser doesn't support the Clipboard API\", 'error');\n    return true;\n  }\n}\n\nfunction checkNotFocusedError(error) {\n  if (error instanceof Error && error.message.toLowerCase().includes('document is not focused')) {\n    toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\n    return true;\n  }\n\n  return false;\n}\n\nfunction actionGlobalCopyState(_x) {\n  return _actionGlobalCopyState.apply(this, arguments);\n}\n\nfunction _actionGlobalCopyState() {\n  _actionGlobalCopyState = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(pinia) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!checkClipboardAccess()) {\n              _context4.next = 2;\n              break;\n            }\n\n            return _context4.abrupt(\"return\");\n\n          case 2:\n            _context4.prev = 2;\n            _context4.next = 5;\n            return navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\n\n          case 5:\n            toastMessage('Global state copied to clipboard.');\n            _context4.next = 14;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](2);\n\n            if (!checkNotFocusedError(_context4.t0)) {\n              _context4.next = 12;\n              break;\n            }\n\n            return _context4.abrupt(\"return\");\n\n          case 12:\n            toastMessage(\"Failed to serialize the state. Check the console for more details.\", 'error');\n            console.error(_context4.t0);\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[2, 8]]);\n  }));\n  return _actionGlobalCopyState.apply(this, arguments);\n}\n\nfunction actionGlobalPasteState(_x2) {\n  return _actionGlobalPasteState.apply(this, arguments);\n}\n\nfunction _actionGlobalPasteState() {\n  _actionGlobalPasteState = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(pinia) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!checkClipboardAccess()) {\n              _context5.next = 2;\n              break;\n            }\n\n            return _context5.abrupt(\"return\");\n\n          case 2:\n            _context5.prev = 2;\n            _context5.t0 = JSON;\n            _context5.next = 6;\n            return navigator.clipboard.readText();\n\n          case 6:\n            _context5.t1 = _context5.sent;\n            pinia.state.value = _context5.t0.parse.call(_context5.t0, _context5.t1);\n            toastMessage('Global state pasted from clipboard.');\n            _context5.next = 17;\n            break;\n\n          case 11:\n            _context5.prev = 11;\n            _context5.t2 = _context5[\"catch\"](2);\n\n            if (!checkNotFocusedError(_context5.t2)) {\n              _context5.next = 15;\n              break;\n            }\n\n            return _context5.abrupt(\"return\");\n\n          case 15:\n            toastMessage(\"Failed to deserialize the state from clipboard. Check the console for more details.\", 'error');\n            console.error(_context5.t2);\n\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 11]]);\n  }));\n  return _actionGlobalPasteState.apply(this, arguments);\n}\n\nfunction actionGlobalSaveState(_x3) {\n  return _actionGlobalSaveState.apply(this, arguments);\n}\n\nfunction _actionGlobalSaveState() {\n  _actionGlobalSaveState = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(pinia) {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            try {\n              saveAs(new Blob([JSON.stringify(pinia.state.value)], {\n                type: 'text/plain;charset=utf-8'\n              }), 'pinia-state.json');\n            } catch (error) {\n              toastMessage(\"Failed to export the state as JSON. Check the console for more details.\", 'error');\n              console.error(error);\n            }\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _actionGlobalSaveState.apply(this, arguments);\n}\n\nvar fileInput;\n\nfunction getFileOpener() {\n  if (!fileInput) {\n    fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.accept = '.json';\n  }\n\n  function openFile() {\n    return new Promise(function (resolve, reject) {\n      fileInput.onchange = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var files, file;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                files = fileInput.files;\n\n                if (files) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", resolve(null));\n\n              case 3:\n                file = files.item(0);\n\n                if (file) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", resolve(null));\n\n              case 6:\n                _context.t0 = resolve;\n                _context.next = 9;\n                return file.text();\n\n              case 9:\n                _context.t1 = _context.sent;\n                _context.t2 = file;\n                _context.t3 = {\n                  text: _context.t1,\n                  file: _context.t2\n                };\n                return _context.abrupt(\"return\", (0, _context.t0)(_context.t3));\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })); // @ts-ignore: TODO: changed from 4.3 to 4.4\n\n      fileInput.oncancel = function () {\n        return resolve(null);\n      };\n\n      fileInput.onerror = reject;\n      fileInput.click();\n    });\n  }\n\n  return openFile;\n}\n\nfunction actionGlobalOpenStateFile(_x4) {\n  return _actionGlobalOpenStateFile.apply(this, arguments);\n}\n\nfunction _actionGlobalOpenStateFile() {\n  _actionGlobalOpenStateFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(pinia) {\n    var _open, result, text, file;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return getFileOpener();\n\n          case 3:\n            _open = _context7.sent;\n            _context7.next = 6;\n            return _open();\n\n          case 6:\n            result = _context7.sent;\n\n            if (result) {\n              _context7.next = 9;\n              break;\n            }\n\n            return _context7.abrupt(\"return\");\n\n          case 9:\n            text = result.text, file = result.file;\n            pinia.state.value = JSON.parse(text);\n            toastMessage(\"Global state imported from \\\"\".concat(file.name, \"\\\".\"));\n            _context7.next = 18;\n            break;\n\n          case 14:\n            _context7.prev = 14;\n            _context7.t0 = _context7[\"catch\"](0);\n            toastMessage(\"Failed to export the state as JSON. Check the console for more details.\", 'error');\n            console.error(_context7.t0);\n\n          case 18:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 14]]);\n  }));\n  return _actionGlobalOpenStateFile.apply(this, arguments);\n}\n\nfunction formatDisplay(display) {\n  return {\n    _custom: {\n      display: display\n    }\n  };\n}\n\nvar PINIA_ROOT_LABEL = '🍍 Pinia (root)';\nvar PINIA_ROOT_ID = '_root';\n\nfunction formatStoreForInspectorTree(store) {\n  return isPinia(store) ? {\n    id: PINIA_ROOT_ID,\n    label: PINIA_ROOT_LABEL\n  } : {\n    id: store.$id,\n    label: store.$id\n  };\n}\n\nfunction formatStoreForInspectorState(store) {\n  if (isPinia(store)) {\n    var storeNames = Array.from(store._s.keys());\n    var storeMap = store._s;\n    var _state = {\n      state: storeNames.map(function (storeId) {\n        return {\n          editable: true,\n          key: storeId,\n          value: store.state.value[storeId]\n        };\n      }),\n      getters: storeNames.filter(function (id) {\n        return storeMap.get(id)._getters;\n      }).map(function (id) {\n        var store = storeMap.get(id);\n        return {\n          editable: false,\n          key: id,\n          value: store._getters.reduce(function (getters, key) {\n            getters[key] = store[key];\n            return getters;\n          }, {})\n        };\n      })\n    };\n    return _state;\n  }\n\n  var state = {\n    state: Object.keys(store.$state).map(function (key) {\n      return {\n        editable: true,\n        key: key,\n        value: store.$state[key]\n      };\n    })\n  }; // avoid adding empty getters\n\n  if (store._getters && store._getters.length) {\n    state.getters = store._getters.map(function (getterName) {\n      return {\n        editable: false,\n        key: getterName,\n        value: store[getterName]\n      };\n    });\n  }\n\n  if (store._customProperties.size) {\n    state.customProperties = Array.from(store._customProperties).map(function (key) {\n      return {\n        editable: true,\n        key: key,\n        value: store[key]\n      };\n    });\n  }\n\n  return state;\n}\n\nfunction formatEventData(events) {\n  if (!events) return {};\n\n  if (Array.isArray(events)) {\n    // TODO: handle add and delete for arrays and objects\n    return events.reduce(function (data, event) {\n      data.keys.push(event.key);\n      data.operations.push(event.type);\n      data.oldValue[event.key] = event.oldValue;\n      data.newValue[event.key] = event.newValue;\n      return data;\n    }, {\n      oldValue: {},\n      keys: [],\n      operations: [],\n      newValue: {}\n    });\n  } else {\n    return {\n      operation: formatDisplay(events.type),\n      key: formatDisplay(events.key),\n      oldValue: events.oldValue,\n      newValue: events.newValue\n    };\n  }\n}\n\nfunction formatMutationType(type) {\n  switch (type) {\n    case MutationType.direct:\n      return 'mutation';\n\n    case MutationType.patchFunction:\n      return '$patch';\n\n    case MutationType.patchObject:\n      return '$patch';\n\n    default:\n      return 'unknown';\n  }\n} // timeline can be paused when directly changing the state\n\n\nvar isTimelineActive = true;\nvar componentStateTypes = [];\nvar MUTATIONS_LAYER_ID = 'pinia:mutations';\nvar INSPECTOR_ID = 'pinia';\nvar assign$1 = Object.assign;\n/**\n * Gets the displayed name of a store in devtools\n *\n * @param id - id of the store\n * @returns a formatted string\n */\n\nvar getStoreType = function getStoreType(id) {\n  return '🍍 ' + id;\n};\n/**\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\n * as soon as it is added to the application.\n *\n * @param app - Vue application\n * @param pinia - pinia instance\n */\n\n\nfunction registerPiniaDevtools(app, pinia) {\n  setupDevtoolsPlugin({\n    id: 'dev.esm.pinia',\n    label: 'Pinia 🍍',\n    logo: 'https://pinia.vuejs.org/logo.svg',\n    packageName: 'pinia',\n    homepage: 'https://pinia.vuejs.org',\n    componentStateTypes: componentStateTypes,\n    app: app\n  }, function (api) {\n    if (typeof api.now !== 'function') {\n      toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\n    }\n\n    api.addTimelineLayer({\n      id: MUTATIONS_LAYER_ID,\n      label: \"Pinia \\uD83C\\uDF4D\",\n      color: 0xe5df88\n    });\n    api.addInspector({\n      id: INSPECTOR_ID,\n      label: 'Pinia 🍍',\n      icon: 'storage',\n      treeFilterPlaceholder: 'Search stores',\n      actions: [{\n        icon: 'content_copy',\n        action: function action() {\n          actionGlobalCopyState(pinia);\n        },\n        tooltip: 'Serialize and copy the state'\n      }, {\n        icon: 'content_paste',\n        action: function () {\n          var _action = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return actionGlobalPasteState(pinia);\n\n                  case 2:\n                    api.sendInspectorTree(INSPECTOR_ID);\n                    api.sendInspectorState(INSPECTOR_ID);\n\n                  case 4:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          function action() {\n            return _action.apply(this, arguments);\n          }\n\n          return action;\n        }(),\n        tooltip: 'Replace the state with the content of your clipboard'\n      }, {\n        icon: 'save',\n        action: function action() {\n          actionGlobalSaveState(pinia);\n        },\n        tooltip: 'Save the state as a JSON file'\n      }, {\n        icon: 'folder_open',\n        action: function () {\n          var _action2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return actionGlobalOpenStateFile(pinia);\n\n                  case 2:\n                    api.sendInspectorTree(INSPECTOR_ID);\n                    api.sendInspectorState(INSPECTOR_ID);\n\n                  case 4:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n          function action() {\n            return _action2.apply(this, arguments);\n          }\n\n          return action;\n        }(),\n        tooltip: 'Import the state from a JSON file'\n      }],\n      nodeActions: [{\n        icon: 'restore',\n        tooltip: 'Reset the state (with \"$reset\")',\n        action: function action(nodeId) {\n          var store = pinia._s.get(nodeId);\n\n          if (!store) {\n            toastMessage(\"Cannot reset \\\"\".concat(nodeId, \"\\\" store because it wasn't found.\"), 'warn');\n          } else if (typeof store.$reset !== 'function') {\n            toastMessage(\"Cannot reset \\\"\".concat(nodeId, \"\\\" store because it doesn't have a \\\"$reset\\\" method implemented.\"), 'warn');\n          } else {\n            store.$reset();\n            toastMessage(\"Store \\\"\".concat(nodeId, \"\\\" reset.\"));\n          }\n        }\n      }]\n    });\n    api.on.inspectComponent(function (payload, ctx) {\n      var proxy = payload.componentInstance && payload.componentInstance.proxy;\n\n      if (proxy && proxy._pStores) {\n        var piniaStores = payload.componentInstance.proxy._pStores;\n        Object.values(piniaStores).forEach(function (store) {\n          payload.instanceData.state.push({\n            type: getStoreType(store.$id),\n            key: 'state',\n            editable: true,\n            value: store._isOptionsAPI ? {\n              _custom: {\n                value: toRaw(store.$state),\n                actions: [{\n                  icon: 'restore',\n                  tooltip: 'Reset the state of this store',\n                  action: function action() {\n                    return store.$reset();\n                  }\n                }]\n              }\n            } : // NOTE: workaround to unwrap transferred refs\n            Object.keys(store.$state).reduce(function (state, key) {\n              state[key] = store.$state[key];\n              return state;\n            }, {})\n          });\n\n          if (store._getters && store._getters.length) {\n            payload.instanceData.state.push({\n              type: getStoreType(store.$id),\n              key: 'getters',\n              editable: false,\n              value: store._getters.reduce(function (getters, key) {\n                try {\n                  getters[key] = store[key];\n                } catch (error) {\n                  // @ts-expect-error: we just want to show it in devtools\n                  getters[key] = error;\n                }\n\n                return getters;\n              }, {})\n            });\n          }\n        });\n      }\n    });\n    api.on.getInspectorTree(function (payload) {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        var stores = [pinia];\n        stores = stores.concat(Array.from(pinia._s.values()));\n        payload.rootNodes = (payload.filter ? stores.filter(function (store) {\n          return '$id' in store ? store.$id.toLowerCase().includes(payload.filter.toLowerCase()) : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase());\n        }) : stores).map(formatStoreForInspectorTree);\n      }\n    });\n    api.on.getInspectorState(function (payload) {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        var inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);\n\n        if (!inspectedStore) {\n          // this could be the selected store restored for a different project\n          // so it's better not to say anything here\n          return;\n        }\n\n        if (inspectedStore) {\n          payload.state = formatStoreForInspectorState(inspectedStore);\n        }\n      }\n    });\n    api.on.editInspectorState(function (payload, ctx) {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        var inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);\n\n        if (!inspectedStore) {\n          return toastMessage(\"store \\\"\".concat(payload.nodeId, \"\\\" not found\"), 'error');\n        }\n\n        var path = payload.path;\n\n        if (!isPinia(inspectedStore)) {\n          // access only the state\n          if (path.length !== 1 || !inspectedStore._customProperties.has(path[0]) || path[0] in inspectedStore.$state) {\n            path.unshift('$state');\n          }\n        } else {\n          // Root access, we can omit the `.value` because the devtools API does it for us\n          path.unshift('state');\n        }\n\n        isTimelineActive = false;\n        payload.set(inspectedStore, path, payload.state.value);\n        isTimelineActive = true;\n      }\n    });\n    api.on.editComponentState(function (payload) {\n      if (payload.type.startsWith('🍍')) {\n        var storeId = payload.type.replace(/^🍍\\s*/, '');\n\n        var store = pinia._s.get(storeId);\n\n        if (!store) {\n          return toastMessage(\"store \\\"\".concat(storeId, \"\\\" not found\"), 'error');\n        }\n\n        var path = payload.path;\n\n        if (path[0] !== 'state') {\n          return toastMessage(\"Invalid path for store \\\"\".concat(storeId, \"\\\":\\n\").concat(path, \"\\nOnly state can be modified.\"));\n        } // rewrite the first entry to be able to directly set the state as\n        // well as any other path\n\n\n        path[0] = '$state';\n        isTimelineActive = false;\n        payload.set(store, path, payload.state.value);\n        isTimelineActive = true;\n      }\n    });\n  });\n}\n\nfunction addStoreToDevtools(app, store) {\n  if (!componentStateTypes.includes(getStoreType(store.$id))) {\n    componentStateTypes.push(getStoreType(store.$id));\n  }\n\n  setupDevtoolsPlugin({\n    id: 'dev.esm.pinia',\n    label: 'Pinia 🍍',\n    logo: 'https://pinia.vuejs.org/logo.svg',\n    packageName: 'pinia',\n    homepage: 'https://pinia.vuejs.org',\n    componentStateTypes: componentStateTypes,\n    app: app,\n    settings: {\n      logStoreChanges: {\n        label: 'Notify about new/deleted stores',\n        type: 'boolean',\n        defaultValue: true\n      } // useEmojis: {\n      //   label: 'Use emojis in messages ⚡️',\n      //   type: 'boolean',\n      //   defaultValue: true,\n      // },\n\n    }\n  }, function (api) {\n    // gracefully handle errors\n    var now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\n    store.$onAction(function (_ref3) {\n      var after = _ref3.after,\n          onError = _ref3.onError,\n          name = _ref3.name,\n          args = _ref3.args;\n      var groupId = runningActionId++;\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: {\n          time: now(),\n          title: '🛫 ' + name,\n          subtitle: 'start',\n          data: {\n            store: formatDisplay(store.$id),\n            action: formatDisplay(name),\n            args: args\n          },\n          groupId: groupId\n        }\n      });\n      after(function (result) {\n        activeAction = undefined;\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: now(),\n            title: '🛬 ' + name,\n            subtitle: 'end',\n            data: {\n              store: formatDisplay(store.$id),\n              action: formatDisplay(name),\n              args: args,\n              result: result\n            },\n            groupId: groupId\n          }\n        });\n      });\n      onError(function (error) {\n        activeAction = undefined;\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: now(),\n            logType: 'error',\n            title: '💥 ' + name,\n            subtitle: 'end',\n            data: {\n              store: formatDisplay(store.$id),\n              action: formatDisplay(name),\n              args: args,\n              error: error\n            },\n            groupId: groupId\n          }\n        });\n      });\n    }, true);\n\n    store._customProperties.forEach(function (name) {\n      watch(function () {\n        return unref(store[name]);\n      }, function (newValue, oldValue) {\n        api.notifyComponentUpdate();\n        api.sendInspectorState(INSPECTOR_ID);\n\n        if (isTimelineActive) {\n          api.addTimelineEvent({\n            layerId: MUTATIONS_LAYER_ID,\n            event: {\n              time: now(),\n              title: 'Change',\n              subtitle: name,\n              data: {\n                newValue: newValue,\n                oldValue: oldValue\n              },\n              groupId: activeAction\n            }\n          });\n        }\n      }, {\n        deep: true\n      });\n    });\n\n    store.$subscribe(function (_ref4, state) {\n      var events = _ref4.events,\n          type = _ref4.type;\n      api.notifyComponentUpdate();\n      api.sendInspectorState(INSPECTOR_ID);\n      if (!isTimelineActive) return; // rootStore.state[store.id] = state\n\n      var eventData = {\n        time: now(),\n        title: formatMutationType(type),\n        data: assign$1({\n          store: formatDisplay(store.$id)\n        }, formatEventData(events)),\n        groupId: activeAction\n      }; // reset for the next mutation\n\n      activeAction = undefined;\n\n      if (type === MutationType.patchFunction) {\n        eventData.subtitle = '⤵️';\n      } else if (type === MutationType.patchObject) {\n        eventData.subtitle = '🧩';\n      } else if (events && !Array.isArray(events)) {\n        eventData.subtitle = events.type;\n      }\n\n      if (events) {\n        eventData.data['rawEvent(s)'] = {\n          _custom: {\n            display: 'DebuggerEvent',\n            type: 'object',\n            tooltip: 'raw DebuggerEvent[]',\n            value: events\n          }\n        };\n      }\n\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: eventData\n      });\n    }, {\n      detached: true,\n      flush: 'sync'\n    });\n    var hotUpdate = store._hotUpdate;\n    store._hotUpdate = markRaw(function (newStore) {\n      hotUpdate(newStore);\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: {\n          time: now(),\n          title: '🔥 ' + store.$id,\n          subtitle: 'HMR update',\n          data: {\n            store: formatDisplay(store.$id),\n            info: formatDisplay(\"HMR update\")\n          }\n        }\n      }); // update the devtools too\n\n      api.notifyComponentUpdate();\n      api.sendInspectorTree(INSPECTOR_ID);\n      api.sendInspectorState(INSPECTOR_ID);\n    });\n    var $dispose = store.$dispose;\n\n    store.$dispose = function () {\n      $dispose();\n      api.notifyComponentUpdate();\n      api.sendInspectorTree(INSPECTOR_ID);\n      api.sendInspectorState(INSPECTOR_ID);\n      api.getSettings().logStoreChanges && toastMessage(\"Disposed \\\"\".concat(store.$id, \"\\\" store \\uD83D\\uDDD1\"));\n    }; // trigger an update so it can display new registered stores\n\n\n    api.notifyComponentUpdate();\n    api.sendInspectorTree(INSPECTOR_ID);\n    api.sendInspectorState(INSPECTOR_ID);\n    api.getSettings().logStoreChanges && toastMessage(\"\\\"\".concat(store.$id, \"\\\" store installed \\uD83C\\uDD95\"));\n  });\n}\n\nvar runningActionId = 0;\nvar activeAction;\n/**\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\n * mutation to the action.\n *\n * @param store - store to patch\n * @param actionNames - list of actionst to patch\n */\n\nfunction patchActionForGrouping(store, actionNames) {\n  // original actions of the store as they are given by pinia. We are going to override them\n  var actions = actionNames.reduce(function (storeActions, actionName) {\n    // use toRaw to avoid tracking #541\n    storeActions[actionName] = toRaw(store)[actionName];\n    return storeActions;\n  }, {});\n\n  var _loop = function _loop(actionName) {\n    store[actionName] = function () {\n      // setActivePinia(store._p)\n      // the running action id is incremented in a before action hook\n      var _actionId = runningActionId;\n      var trackedStore = new Proxy(store, {\n        get: function get() {\n          activeAction = _actionId;\n          return Reflect.get.apply(Reflect, arguments);\n        },\n        set: function set() {\n          activeAction = _actionId;\n          return Reflect.set.apply(Reflect, arguments);\n        }\n      });\n      return actions[actionName].apply(trackedStore, arguments);\n    };\n  };\n\n  for (var actionName in actions) {\n    _loop(actionName);\n  }\n}\n/**\n * pinia.use(devtoolsPlugin)\n */\n\n\nfunction devtoolsPlugin(_ref5) {\n  var app = _ref5.app,\n      store = _ref5.store,\n      options = _ref5.options;\n\n  // HMR module\n  if (store.$id.startsWith('__hot:')) {\n    return;\n  } // detect option api vs setup api\n\n\n  if (options.state) {\n    store._isOptionsAPI = true;\n  } // only wrap actions in option-defined stores as this technique relies on\n  // wrapping the context of the action with a proxy\n\n\n  if (typeof options.state === 'function') {\n    patchActionForGrouping( // @ts-expect-error: can cast the store...\n    store, Object.keys(options.actions));\n    var originalHotUpdate = store._hotUpdate; // Upgrade the HMR to also update the new actions\n\n    toRaw(store)._hotUpdate = function (newStore) {\n      originalHotUpdate.apply(this, arguments);\n      patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions));\n    };\n  }\n\n  addStoreToDevtools(app, // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\n  store);\n}\n/**\n * Creates a Pinia instance to be used by the application\n */\n\n\nfunction createPinia() {\n  var scope = effectScope(true); // NOTE: here we could check the window object for a state and directly set it\n  // if there is anything like it with Vue 3 SSR\n\n  var state = scope.run(function () {\n    return ref({});\n  });\n  var _p = []; // plugins added before calling app.use(pinia)\n\n  var toBeInstalled = [];\n  var pinia = markRaw({\n    install: function install(app) {\n      // this allows calling useStore() outside of a component setup after\n      // installing pinia's plugin\n      setActivePinia(pinia);\n\n      if (!isVue2) {\n        pinia._a = app;\n        app.provide(piniaSymbol, pinia);\n        app.config.globalProperties.$pinia = pinia;\n        /* istanbul ignore else */\n\n        if (USE_DEVTOOLS) {\n          registerPiniaDevtools(app, pinia);\n        }\n\n        toBeInstalled.forEach(function (plugin) {\n          return _p.push(plugin);\n        });\n        toBeInstalled = [];\n      }\n    },\n    use: function use(plugin) {\n      if (!this._a && !isVue2) {\n        toBeInstalled.push(plugin);\n      } else {\n        _p.push(plugin);\n      }\n\n      return this;\n    },\n    _p: _p,\n    // it's actually undefined here\n    // @ts-expect-error\n    _a: null,\n    _e: scope,\n    _s: new Map(),\n    state: state\n  }); // pinia devtools rely on dev only features so they cannot be forced unless\n  // the dev build of Vue is used. Avoid old browsers like IE11.\n\n  if (USE_DEVTOOLS && typeof Proxy !== 'undefined') {\n    pinia.use(devtoolsPlugin);\n  }\n\n  return pinia;\n}\n/**\n * Checks if a function is a `StoreDefinition`.\n *\n * @param fn - object to test\n * @returns true if `fn` is a StoreDefinition\n */\n\n\nvar isUseStore = function isUseStore(fn) {\n  return typeof fn === 'function' && typeof fn.$id === 'string';\n};\n/**\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\n * remove any key not existing in `newState` and recursively merge plain\n * objects.\n *\n * @param newState - new state object to be patched\n * @param oldState - old state that should be used to patch newState\n * @returns - newState\n */\n\n\nfunction patchObject(newState, oldState) {\n  // no need to go through symbols because they cannot be serialized anyway\n  for (var key in oldState) {\n    var subPatch = oldState[key]; // skip the whole sub tree\n\n    if (!(key in newState)) {\n      continue;\n    }\n\n    var targetValue = newState[key];\n\n    if (isPlainObject(targetValue) && isPlainObject(subPatch) && !isRef(subPatch) && !isReactive(subPatch)) {\n      newState[key] = patchObject(targetValue, subPatch);\n    } else {\n      // objects are either a bit more complex (e.g. refs) or primitives, so we\n      // just set the whole thing\n      if (isVue2) {\n        set(newState, key, subPatch);\n      } else {\n        newState[key] = subPatch;\n      }\n    }\n  }\n\n  return newState;\n}\n/**\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\n *\n * @example\n * ```js\n * const useUser = defineStore(...)\n * if (import.meta.hot) {\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\n * }\n * ```\n *\n * @param initialUseStore - return of the defineStore to hot update\n * @param hot - `import.meta.hot`\n */\n\n\nfunction acceptHMRUpdate(initialUseStore, hot) {\n  // strip as much as possible from iife.prod\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return function () {};\n  }\n\n  return function (newModule) {\n    var pinia = hot.data.pinia || initialUseStore._pinia;\n\n    if (!pinia) {\n      // this store is still not used\n      return;\n    } // preserve the pinia instance across loads\n\n\n    hot.data.pinia = pinia; // console.log('got data', newStore)\n\n    for (var exportName in newModule) {\n      var useStore = newModule[exportName]; // console.log('checking for', exportName)\n\n      if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\n        // console.log('Accepting update for', useStore.$id)\n        var id = useStore.$id;\n\n        if (id !== initialUseStore.$id) {\n          console.warn(\"The id of the store changed from \\\"\".concat(initialUseStore.$id, \"\\\" to \\\"\").concat(id, \"\\\". Reloading.\")); // return import.meta.hot.invalidate()\n\n          return hot.invalidate();\n        }\n\n        var existingStore = pinia._s.get(id);\n\n        if (!existingStore) {\n          console.log(\"[Pinia]: skipping hmr because store doesn't exist yet\");\n          return;\n        }\n\n        useStore(pinia, existingStore);\n      }\n    }\n  };\n}\n\nvar noop = function noop() {};\n\nfunction addSubscription(subscriptions, callback, detached) {\n  var onCleanup = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n  subscriptions.push(callback);\n\n  var removeSubscription = function removeSubscription() {\n    var idx = subscriptions.indexOf(callback);\n\n    if (idx > -1) {\n      subscriptions.splice(idx, 1);\n      onCleanup();\n    }\n  };\n\n  if (!detached && getCurrentScope()) {\n    onScopeDispose(removeSubscription);\n  }\n\n  return removeSubscription;\n}\n\nfunction triggerSubscriptions(subscriptions) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  subscriptions.slice().forEach(function (callback) {\n    callback.apply(void 0, args);\n  });\n}\n\nvar fallbackRunWithContext = function fallbackRunWithContext(fn) {\n  return fn();\n};\n\nfunction mergeReactiveObjects(target, patchToApply) {\n  // Handle Map instances\n  if (target instanceof Map && patchToApply instanceof Map) {\n    patchToApply.forEach(function (value, key) {\n      return target.set(key, value);\n    });\n  } // Handle Set instances\n\n\n  if (target instanceof Set && patchToApply instanceof Set) {\n    patchToApply.forEach(target.add, target);\n  } // no need to go through symbols because they cannot be serialized anyway\n\n\n  for (var key in patchToApply) {\n    if (!patchToApply.hasOwnProperty(key)) continue;\n    var subPatch = patchToApply[key];\n    var targetValue = target[key];\n\n    if (isPlainObject(targetValue) && isPlainObject(subPatch) && target.hasOwnProperty(key) && !isRef(subPatch) && !isReactive(subPatch)) {\n      // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\n      // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\n      // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\n      target[key] = mergeReactiveObjects(targetValue, subPatch);\n    } else {\n      // @ts-expect-error: subPatch is a valid value\n      target[key] = subPatch;\n    }\n  }\n\n  return target;\n}\n\nvar skipHydrateSymbol = process.env.NODE_ENV !== 'production' ? Symbol('pinia:skipHydration') :\n/* istanbul ignore next */\nSymbol();\nvar skipHydrateMap = /*#__PURE__*/new WeakMap();\n/**\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\n *\n * @param obj - target object\n * @returns obj\n */\n\nfunction skipHydrate(obj) {\n  return isVue2 ? // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\n\n  /* istanbul ignore next */\n  skipHydrateMap.set(obj, 1) && obj : Object.defineProperty(obj, skipHydrateSymbol, {});\n}\n/**\n * Returns whether a value should be hydrated\n *\n * @param obj - target variable\n * @returns true if `obj` should be hydrated\n */\n\n\nfunction shouldHydrate(obj) {\n  return isVue2 ?\n  /* istanbul ignore next */\n  !skipHydrateMap.has(obj) : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\n}\n\nvar assign = Object.assign;\n\nfunction isComputed(o) {\n  return !!(isRef(o) && o.effect);\n}\n\nfunction createOptionsStore(id, options, pinia, hot) {\n  var state = options.state,\n      actions = options.actions,\n      getters = options.getters;\n  var initialState = pinia.state.value[id];\n  var store;\n\n  function setup() {\n    if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n      /* istanbul ignore if */\n      if (isVue2) {\n        set(pinia.state.value, id, state ? state() : {});\n      } else {\n        pinia.state.value[id] = state ? state() : {};\n      }\n    } // avoid creating a state in pinia.state.value\n\n\n    var localState = process.env.NODE_ENV !== 'production' && hot ? // use ref() to unwrap refs inside state TODO: check if this is still necessary\n    toRefs(ref(state ? state() : {}).value) : toRefs(pinia.state.value[id]);\n    return assign(localState, actions, Object.keys(getters || {}).reduce(function (computedGetters, name) {\n      if (process.env.NODE_ENV !== 'production' && name in localState) {\n        console.warn(\"[\\uD83C\\uDF4D]: A getter cannot have the same name as another state property. Rename one of them. Found with \\\"\".concat(name, \"\\\" in store \\\"\").concat(id, \"\\\".\"));\n      }\n\n      computedGetters[name] = markRaw(computed(function () {\n        setActivePinia(pinia); // it was created just before\n\n        var store = pinia._s.get(id); // allow cross using stores\n\n        /* istanbul ignore next */\n\n\n        if (isVue2 && !store._r) return; // @ts-expect-error\n        // return getters![name].call(context, context)\n        // TODO: avoid reading the getter while assigning with a global variable\n\n        return getters[name].call(store, store);\n      }));\n      return computedGetters;\n    }, {}));\n  }\n\n  store = createSetupStore(id, setup, options, pinia, hot, true);\n  return store;\n}\n\nfunction createSetupStore($id, setup) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var pinia = arguments.length > 3 ? arguments[3] : undefined;\n  var hot = arguments.length > 4 ? arguments[4] : undefined;\n  var isOptionsStore = arguments.length > 5 ? arguments[5] : undefined;\n  var scope;\n  var optionsForPlugin = assign({\n    actions: {}\n  }, options);\n  /* istanbul ignore if */\n\n  if (process.env.NODE_ENV !== 'production' && !pinia._e.active) {\n    throw new Error('Pinia destroyed');\n  } // watcher options for $subscribe\n\n\n  var $subscribeOptions = {\n    deep: true // flush: 'post',\n\n  };\n  /* istanbul ignore else */\n\n  if (process.env.NODE_ENV !== 'production' && !isVue2) {\n    $subscribeOptions.onTrigger = function (event) {\n      /* istanbul ignore else */\n      if (isListening) {\n        debuggerEvents = event; // avoid triggering this while the store is being built and the state is being set in pinia\n      } else if (isListening == false && !store._hotUpdating) {\n        // let patch send all the events together later\n\n        /* istanbul ignore else */\n        if (Array.isArray(debuggerEvents)) {\n          debuggerEvents.push(event);\n        } else {\n          console.error('🍍 debuggerEvents should be an array. This is most likely an internal Pinia bug.');\n        }\n      }\n    };\n  } // internal state\n\n\n  var isListening; // set to true at the end\n\n  var isSyncListening; // set to true at the end\n\n  var subscriptions = [];\n  var actionSubscriptions = [];\n  var debuggerEvents;\n  var initialState = pinia.state.value[$id]; // avoid setting the state for option stores if it is set\n  // by the setup\n\n  if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n    /* istanbul ignore if */\n    if (isVue2) {\n      set(pinia.state.value, $id, {});\n    } else {\n      pinia.state.value[$id] = {};\n    }\n  }\n\n  var hotState = ref({}); // avoid triggering too many listeners\n  // https://github.com/vuejs/pinia/issues/1129\n\n  var activeListener;\n\n  function $patch(partialStateOrMutator) {\n    var subscriptionMutation;\n    isListening = isSyncListening = false; // reset the debugger events since patches are sync\n\n    /* istanbul ignore else */\n\n    if (process.env.NODE_ENV !== 'production') {\n      debuggerEvents = [];\n    }\n\n    if (typeof partialStateOrMutator === 'function') {\n      partialStateOrMutator(pinia.state.value[$id]);\n      subscriptionMutation = {\n        type: MutationType.patchFunction,\n        storeId: $id,\n        events: debuggerEvents\n      };\n    } else {\n      mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\n      subscriptionMutation = {\n        type: MutationType.patchObject,\n        payload: partialStateOrMutator,\n        storeId: $id,\n        events: debuggerEvents\n      };\n    }\n\n    var myListenerId = activeListener = Symbol();\n    nextTick().then(function () {\n      if (activeListener === myListenerId) {\n        isListening = true;\n      }\n    });\n    isSyncListening = true; // because we paused the watcher, we need to manually call the subscriptions\n\n    triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\n  }\n\n  var $reset = isOptionsStore ? function $reset() {\n    var state = options.state;\n    var newState = state ? state() : {}; // we use a patch to group all changes into one single subscription\n\n    this.$patch(function ($state) {\n      assign($state, newState);\n    });\n  } :\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' ? function () {\n    throw new Error(\"\\uD83C\\uDF4D: Store \\\"\".concat($id, \"\\\" is built using the setup syntax and does not implement $reset().\"));\n  } : noop;\n\n  function $dispose() {\n    scope.stop();\n    subscriptions = [];\n    actionSubscriptions = [];\n\n    pinia._s.delete($id);\n  }\n  /**\n   * Wraps an action to handle subscriptions.\n   *\n   * @param name - name of the action\n   * @param action - action to wrap\n   * @returns a wrapped action to handle subscriptions\n   */\n\n\n  function wrapAction(name, action) {\n    return function () {\n      setActivePinia(pinia);\n      var args = Array.from(arguments);\n      var afterCallbackList = [];\n      var onErrorCallbackList = [];\n\n      function after(callback) {\n        afterCallbackList.push(callback);\n      }\n\n      function onError(callback) {\n        onErrorCallbackList.push(callback);\n      } // @ts-expect-error\n\n\n      triggerSubscriptions(actionSubscriptions, {\n        args: args,\n        name: name,\n        store: store,\n        after: after,\n        onError: onError\n      });\n      var ret;\n\n      try {\n        ret = action.apply(this && this.$id === $id ? this : store, args); // handle sync errors\n      } catch (error) {\n        triggerSubscriptions(onErrorCallbackList, error);\n        throw error;\n      }\n\n      if (ret instanceof Promise) {\n        return ret.then(function (value) {\n          triggerSubscriptions(afterCallbackList, value);\n          return value;\n        }).catch(function (error) {\n          triggerSubscriptions(onErrorCallbackList, error);\n          return Promise.reject(error);\n        });\n      } // trigger after callbacks\n\n\n      triggerSubscriptions(afterCallbackList, ret);\n      return ret;\n    };\n  }\n\n  var _hmrPayload = /*#__PURE__*/markRaw({\n    actions: {},\n    getters: {},\n    state: [],\n    hotState: hotState\n  });\n\n  var partialStore = {\n    _p: pinia,\n    // _s: scope,\n    $id: $id,\n    $onAction: addSubscription.bind(null, actionSubscriptions),\n    $patch: $patch,\n    $reset: $reset,\n    $subscribe: function $subscribe(callback) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var removeSubscription = addSubscription(subscriptions, callback, options.detached, function () {\n        return stopWatcher();\n      });\n      var stopWatcher = scope.run(function () {\n        return watch(function () {\n          return pinia.state.value[$id];\n        }, function (state) {\n          if (options.flush === 'sync' ? isSyncListening : isListening) {\n            callback({\n              storeId: $id,\n              type: MutationType.direct,\n              events: debuggerEvents\n            }, state);\n          }\n        }, assign({}, $subscribeOptions, options));\n      });\n      return removeSubscription;\n    },\n    $dispose: $dispose\n  };\n  /* istanbul ignore if */\n\n  if (isVue2) {\n    // start as non ready\n    partialStore._r = false;\n  }\n\n  var store = reactive(process.env.NODE_ENV !== 'production' || USE_DEVTOOLS ? assign({\n    _hmrPayload: _hmrPayload,\n    _customProperties: markRaw(new Set()) // devtools custom properties\n\n  }, partialStore // must be added later\n  // setupStore\n  ) : partialStore); // store the partial store now so the setup of stores can instantiate each other before they are finished without\n  // creating infinite loops.\n\n  pinia._s.set($id, store);\n\n  var runWithContext = pinia._a && pinia._a.runWithContext || fallbackRunWithContext; // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\n\n  var setupStore = pinia._e.run(function () {\n    scope = effectScope();\n    return runWithContext(function () {\n      return scope.run(setup);\n    });\n  }); // overwrite existing actions to support $onAction\n\n\n  for (var key in setupStore) {\n    var prop = setupStore[key];\n\n    if (isRef(prop) && !isComputed(prop) || isReactive(prop)) {\n      // mark it as a piece of state to be serialized\n      if (process.env.NODE_ENV !== 'production' && hot) {\n        set(hotState.value, key, toRef(setupStore, key)); // createOptionStore directly sets the state in pinia.state.value so we\n        // can just skip that\n      } else if (!isOptionsStore) {\n        // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\n        if (initialState && shouldHydrate(prop)) {\n          if (isRef(prop)) {\n            prop.value = initialState[key];\n          } else {\n            // probably a reactive object, lets recursively assign\n            // @ts-expect-error: prop is unknown\n            mergeReactiveObjects(prop, initialState[key]);\n          }\n        } // transfer the ref to the pinia state to keep everything in sync\n\n        /* istanbul ignore if */\n\n\n        if (isVue2) {\n          set(pinia.state.value[$id], key, prop);\n        } else {\n          pinia.state.value[$id][key] = prop;\n        }\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        _hmrPayload.state.push(key);\n      } // action\n\n    } else if (typeof prop === 'function') {\n      // @ts-expect-error: we are overriding the function we avoid wrapping if\n      var actionValue = process.env.NODE_ENV !== 'production' && hot ? prop : wrapAction(key, prop); // this a hot module replacement store because the hotUpdate method needs\n      // to do it with the right context\n\n      /* istanbul ignore if */\n\n      if (isVue2) {\n        set(setupStore, key, actionValue);\n      } else {\n        // @ts-expect-error\n        setupStore[key] = actionValue;\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        _hmrPayload.actions[key] = prop;\n      } // list actions so they can be used in plugins\n      // @ts-expect-error\n\n\n      optionsForPlugin.actions[key] = prop;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // add getters for devtools\n      if (isComputed(prop)) {\n        _hmrPayload.getters[key] = isOptionsStore ? // @ts-expect-error\n        options.getters[key] : prop;\n\n        if (IS_CLIENT) {\n          var getters = setupStore._getters || ( // @ts-expect-error: same\n          setupStore._getters = markRaw([]));\n          getters.push(key);\n        }\n      }\n    }\n  } // add the state, getters, and action properties\n\n  /* istanbul ignore if */\n\n\n  if (isVue2) {\n    Object.keys(setupStore).forEach(function (key) {\n      set(store, key, setupStore[key]);\n    });\n  } else {\n    assign(store, setupStore); // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\n    // Make `storeToRefs()` work with `reactive()` #799\n\n    assign(toRaw(store), setupStore);\n  } // use this instead of a computed with setter to be able to create it anywhere\n  // without linking the computed lifespan to wherever the store is first\n  // created.\n\n\n  Object.defineProperty(store, '$state', {\n    get: function get() {\n      return process.env.NODE_ENV !== 'production' && hot ? hotState.value : pinia.state.value[$id];\n    },\n    set: function set(state) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && hot) {\n        throw new Error('cannot set hotState');\n      }\n\n      $patch(function ($state) {\n        assign($state, state);\n      });\n    }\n  }); // add the hotUpdate before plugins to allow them to override it\n\n  /* istanbul ignore else */\n\n  if (process.env.NODE_ENV !== 'production') {\n    store._hotUpdate = markRaw(function (newStore) {\n      store._hotUpdating = true;\n\n      newStore._hmrPayload.state.forEach(function (stateKey) {\n        if (stateKey in store.$state) {\n          var newStateTarget = newStore.$state[stateKey];\n          var oldStateSource = store.$state[stateKey];\n\n          if (_typeof(newStateTarget) === 'object' && isPlainObject(newStateTarget) && isPlainObject(oldStateSource)) {\n            patchObject(newStateTarget, oldStateSource);\n          } else {\n            // transfer the ref\n            newStore.$state[stateKey] = oldStateSource;\n          }\n        } // patch direct access properties to allow store.stateProperty to work as\n        // store.$state.stateProperty\n\n\n        set(store, stateKey, toRef(newStore.$state, stateKey));\n      }); // remove deleted state properties\n\n\n      Object.keys(store.$state).forEach(function (stateKey) {\n        if (!(stateKey in newStore.$state)) {\n          del(store, stateKey);\n        }\n      }); // avoid devtools logging this as a mutation\n\n      isListening = false;\n      isSyncListening = false;\n      pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\n      isSyncListening = true;\n      nextTick().then(function () {\n        isListening = true;\n      });\n\n      for (var actionName in newStore._hmrPayload.actions) {\n        var action = newStore[actionName];\n        set(store, actionName, wrapAction(actionName, action));\n      } // TODO: does this work in both setup and option store?\n\n\n      var _loop2 = function _loop2(getterName) {\n        var getter = newStore._hmrPayload.getters[getterName];\n        var getterValue = isOptionsStore ? // special handling of options api\n        computed(function () {\n          setActivePinia(pinia);\n          return getter.call(store, store);\n        }) : getter;\n        set(store, getterName, getterValue);\n      };\n\n      for (var getterName in newStore._hmrPayload.getters) {\n        _loop2(getterName);\n      } // remove deleted getters\n\n\n      Object.keys(store._hmrPayload.getters).forEach(function (key) {\n        if (!(key in newStore._hmrPayload.getters)) {\n          del(store, key);\n        }\n      }); // remove old actions\n\n      Object.keys(store._hmrPayload.actions).forEach(function (key) {\n        if (!(key in newStore._hmrPayload.actions)) {\n          del(store, key);\n        }\n      }); // update the values used in devtools and to allow deleting new properties later on\n\n      store._hmrPayload = newStore._hmrPayload;\n      store._getters = newStore._getters;\n      store._hotUpdating = false;\n    });\n  }\n\n  if (USE_DEVTOOLS) {\n    var nonEnumerable = {\n      writable: true,\n      configurable: true,\n      // avoid warning on devtools trying to display this property\n      enumerable: false\n    };\n    ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach(function (p) {\n      Object.defineProperty(store, p, assign({\n        value: store[p]\n      }, nonEnumerable));\n    });\n  }\n  /* istanbul ignore if */\n\n\n  if (isVue2) {\n    // mark the store as ready before plugins\n    store._r = true;\n  } // apply all plugins\n\n\n  pinia._p.forEach(function (extender) {\n    /* istanbul ignore else */\n    if (USE_DEVTOOLS) {\n      var extensions = scope.run(function () {\n        return extender({\n          store: store,\n          app: pinia._a,\n          pinia: pinia,\n          options: optionsForPlugin\n        });\n      });\n      Object.keys(extensions || {}).forEach(function (key) {\n        return store._customProperties.add(key);\n      });\n      assign(store, extensions);\n    } else {\n      assign(store, scope.run(function () {\n        return extender({\n          store: store,\n          app: pinia._a,\n          pinia: pinia,\n          options: optionsForPlugin\n        });\n      }));\n    }\n  });\n\n  if (process.env.NODE_ENV !== 'production' && store.$state && _typeof(store.$state) === 'object' && typeof store.$state.constructor === 'function' && !store.$state.constructor.toString().includes('[native code]')) {\n    console.warn(\"[\\uD83C\\uDF4D]: The \\\"state\\\" must be a plain object. It cannot be\\n\" + \"\\tstate: () => new MyClass()\\n\" + \"Found in store \\\"\".concat(store.$id, \"\\\".\"));\n  } // only apply hydrate to option stores with an initial state in pinia\n\n\n  if (initialState && isOptionsStore && options.hydrate) {\n    options.hydrate(store.$state, initialState);\n  }\n\n  isListening = true;\n  isSyncListening = true;\n  return store;\n}\n\nfunction defineStore( // TODO: add proper types from above\nidOrOptions, setup, setupOptions) {\n  var id;\n  var options;\n  var isSetupStore = typeof setup === 'function';\n\n  if (typeof idOrOptions === 'string') {\n    id = idOrOptions; // the option store setup will contain the actual options in this case\n\n    options = isSetupStore ? setupOptions : setup;\n  } else {\n    options = idOrOptions;\n    id = idOrOptions.id;\n\n    if (process.env.NODE_ENV !== 'production' && typeof id !== 'string') {\n      throw new Error(\"[\\uD83C\\uDF4D]: \\\"defineStore()\\\" must be passed a store id as its first argument.\");\n    }\n  }\n\n  function useStore(pinia, hot) {\n    var hasContext = hasInjectionContext();\n    pinia = // in test mode, ignore the argument provided as we can always retrieve a\n    // pinia instance with getActivePinia()\n    (process.env.NODE_ENV === 'test' && activePinia && activePinia._testing ? null : pinia) || (hasContext ? inject(piniaSymbol, null) : null);\n    if (pinia) setActivePinia(pinia);\n\n    if (process.env.NODE_ENV !== 'production' && !activePinia) {\n      throw new Error(\"[\\uD83C\\uDF4D]: \\\"getActivePinia()\\\" was called but there was no active Pinia. Did you forget to install pinia?\\n\" + \"\\tconst pinia = createPinia()\\n\" + \"\\tapp.use(pinia)\\n\" + \"This will fail in production.\");\n    }\n\n    pinia = activePinia;\n\n    if (!pinia._s.has(id)) {\n      // creating the store registers it in `pinia._s`\n      if (isSetupStore) {\n        createSetupStore(id, setup, options, pinia);\n      } else {\n        createOptionsStore(id, options, pinia);\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        // @ts-expect-error: not the right inferred type\n        useStore._pinia = pinia;\n      }\n    }\n\n    var store = pinia._s.get(id);\n\n    if (process.env.NODE_ENV !== 'production' && hot) {\n      var hotId = '__hot:' + id;\n      var newStore = isSetupStore ? createSetupStore(hotId, setup, options, pinia, true) : createOptionsStore(hotId, assign({}, options), pinia, true);\n\n      hot._hotUpdate(newStore); // cleanup the state properties and the store from the cache\n\n\n      delete pinia.state.value[hotId];\n\n      pinia._s.delete(hotId);\n    }\n\n    if (process.env.NODE_ENV !== 'production' && IS_CLIENT) {\n      var currentInstance = getCurrentInstance(); // save stores in instances to access them devtools\n\n      if (currentInstance && currentInstance.proxy && // avoid adding stores that are just built for hot module replacement\n      !hot) {\n        var vm = currentInstance.proxy;\n        var cache = '_pStores' in vm ? vm._pStores : vm._pStores = {};\n        cache[id] = store;\n      }\n    } // StoreGeneric cannot be casted towards Store\n\n\n    return store;\n  }\n\n  useStore.$id = id;\n  return useStore;\n}\n\nvar mapStoreSuffix = 'Store';\n/**\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\n * interface if you are using TypeScript.\n *\n * @param suffix - new suffix\n */\n\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\n) {\n  mapStoreSuffix = suffix;\n}\n/**\n * Allows using stores without the composition API (`setup()`) by generating an\n * object to be spread in the `computed` field of a component. It accepts a list\n * of store definitions.\n *\n * @example\n * ```js\n * export default {\n *   computed: {\n *     // other computed properties\n *     ...mapStores(useUserStore, useCartStore)\n *   },\n *\n *   created() {\n *     this.userStore // store with id \"user\"\n *     this.cartStore // store with id \"cart\"\n *   }\n * }\n * ```\n *\n * @param stores - list of stores to map to an object\n */\n\n\nfunction mapStores() {\n  for (var _len2 = arguments.length, stores = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    stores[_key2] = arguments[_key2];\n  }\n\n  if (process.env.NODE_ENV !== 'production' && Array.isArray(stores[0])) {\n    console.warn(\"[\\uD83C\\uDF4D]: Directly pass all stores to \\\"mapStores()\\\" without putting them in an array:\\n\" + \"Replace\\n\" + \"\\tmapStores([useAuthStore, useCartStore])\\n\" + \"with\\n\" + \"\\tmapStores(useAuthStore, useCartStore)\\n\" + \"This will fail in production if not fixed.\");\n    stores = stores[0];\n  }\n\n  return stores.reduce(function (reduced, useStore) {\n    // @ts-expect-error: $id is added by defineStore\n    reduced[useStore.$id + mapStoreSuffix] = function () {\n      return useStore(this.$pinia);\n    };\n\n    return reduced;\n  }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\n\n\nfunction mapState(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce(function (reduced, key) {\n    reduced[key] = function () {\n      return useStore(this.$pinia)[key];\n    };\n\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce(function (reduced, key) {\n    // @ts-expect-error\n    reduced[key] = function () {\n      var store = useStore(this.$pinia);\n      var storeKey = keysOrMapper[key]; // for some reason TS is unable to infer the type of storeKey to be a\n      // function\n\n      return typeof storeKey === 'function' ? storeKey.call(this, store) : store[storeKey];\n    };\n\n    return reduced;\n  }, {});\n}\n/**\n * Alias for `mapState()`. You should use `mapState()` instead.\n * @deprecated use `mapState()` instead.\n */\n\n\nvar mapGetters = mapState;\n/**\n * Allows directly using actions from your store without using the composition\n * API (`setup()`) by generating an object to be spread in the `methods` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\n\nfunction mapActions(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce(function (reduced, key) {\n    // @ts-expect-error\n    reduced[key] = function () {\n      var _useStore;\n\n      return (_useStore = useStore(this.$pinia))[key].apply(_useStore, arguments);\n    };\n\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce(function (reduced, key) {\n    // @ts-expect-error\n    reduced[key] = function () {\n      var _useStore2;\n\n      return (_useStore2 = useStore(this.$pinia))[keysOrMapper[key]].apply(_useStore2, arguments);\n    };\n\n    return reduced;\n  }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\n\n\nfunction mapWritableState(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce(function (reduced, key) {\n    // @ts-ignore\n    reduced[key] = {\n      get: function get() {\n        return useStore(this.$pinia)[key];\n      },\n      set: function set(value) {\n        // it's easier to type it here as any\n        return useStore(this.$pinia)[key] = value;\n      }\n    };\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce(function (reduced, key) {\n    // @ts-ignore\n    reduced[key] = {\n      get: function get() {\n        return useStore(this.$pinia)[keysOrMapper[key]];\n      },\n      set: function set(value) {\n        // it's easier to type it here as any\n        return useStore(this.$pinia)[keysOrMapper[key]] = value;\n      }\n    };\n    return reduced;\n  }, {});\n}\n/**\n * Creates an object of references with all the state, getters, and plugin-added\n * state properties of the store. Similar to `toRefs()` but specifically\n * designed for Pinia stores so methods and non reactive properties are\n * completely ignored.\n *\n * @param store - store to extract the refs from\n */\n\n\nfunction storeToRefs(store) {\n  // See https://github.com/vuejs/pinia/issues/852\n  // It's easier to just use toRefs() even if it includes more stuff\n  if (isVue2) {\n    // @ts-expect-error: toRefs include methods and others\n    return toRefs(store);\n  } else {\n    store = toRaw(store);\n    var refs = {};\n\n    for (var key in store) {\n      var value = store[key];\n\n      if (isRef(value) || isReactive(value)) {\n        // @ts-expect-error: the key is state or getter\n        refs[key] = // ---\n        toRef(store, key);\n      }\n    }\n\n    return refs;\n  }\n}\n/**\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\n * https://pinia.vuejs.org/ssr/nuxt.html.\n *\n * @example\n * ```js\n * import Vue from 'vue'\n * import { PiniaVuePlugin, createPinia } from 'pinia'\n *\n * Vue.use(PiniaVuePlugin)\n * const pinia = createPinia()\n *\n * new Vue({\n *   el: '#app',\n *   // ...\n *   pinia,\n * })\n * ```\n *\n * @param _Vue - `Vue` imported from 'vue'.\n */\n\n\nvar PiniaVuePlugin = function PiniaVuePlugin(_Vue) {\n  // Equivalent of\n  // app.config.globalProperties.$pinia = pinia\n  _Vue.mixin({\n    beforeCreate: function beforeCreate() {\n      var options = this.$options;\n\n      if (options.pinia) {\n        var pinia = options.pinia; // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\n\n        /* istanbul ignore else */\n\n        if (!this._provided) {\n          var provideCache = {};\n          Object.defineProperty(this, '_provided', {\n            get: function get() {\n              return provideCache;\n            },\n            set: function set(v) {\n              return Object.assign(provideCache, v);\n            }\n          });\n        }\n\n        this._provided[piniaSymbol] = pinia; // propagate the pinia instance in an SSR friendly way\n        // avoid adding it to nuxt twice\n\n        /* istanbul ignore else */\n\n        if (!this.$pinia) {\n          this.$pinia = pinia;\n        }\n\n        pinia._a = this;\n\n        if (IS_CLIENT) {\n          // this allows calling useStore() outside of a component setup after\n          // installing pinia's plugin\n          setActivePinia(pinia);\n        }\n\n        if (USE_DEVTOOLS) {\n          registerPiniaDevtools(pinia._a, pinia);\n        }\n      } else if (!this.$pinia && options.parent && options.parent.$pinia) {\n        this.$pinia = options.parent.$pinia;\n      }\n    },\n    destroyed: function destroyed() {\n      delete this._pStores;\n    }\n  });\n};\n\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, skipHydrate, storeToRefs };","map":{"version":3,"sources":["/home/gabriel/Documentos/desafio_coorlab/code/node_modules/pinia/dist/pinia.mjs"],"names":["hasInjectionContext","inject","toRaw","watch","unref","markRaw","effectScope","ref","isVue2","isRef","isReactive","set","getCurrentScope","onScopeDispose","getCurrentInstance","reactive","toRef","del","nextTick","computed","toRefs","setupDevtoolsPlugin","activePinia","setActivePinia","pinia","getActivePinia","piniaSymbol","process","env","NODE_ENV","Symbol","isPlainObject","o","Object","prototype","toString","call","toJSON","MutationType","IS_CLIENT","window","USE_DEVTOOLS","__VUE_PROD_DEVTOOLS__","_global","self","global","globalThis","HTMLElement","bom","blob","autoBom","test","type","Blob","String","fromCharCode","download","url","name","opts","xhr","XMLHttpRequest","open","responseType","onload","saveAs","response","onerror","console","error","send","corsEnabled","e","status","click","node","dispatchEvent","MouseEvent","evt","document","createEvent","initMouseEvent","_navigator","navigator","userAgent","isMacOSWebView","HTMLAnchorElement","downloadSaveAs","msSaveAs","fileSaverSaveAs","a","createElement","rel","href","origin","location","target","URL","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","popup","title","body","innerText","force","isSafari","isChromeIOS","FileReader","reader","onloadend","result","Error","replace","assign","readAsDataURL","toastMessage","message","piniaMessage","__VUE_DEVTOOLS_TOAST__","warn","log","isPinia","checkClipboardAccess","checkNotFocusedError","toLowerCase","includes","actionGlobalCopyState","clipboard","writeText","JSON","stringify","state","value","actionGlobalPasteState","readText","parse","actionGlobalSaveState","fileInput","getFileOpener","accept","openFile","Promise","resolve","reject","onchange","files","file","item","text","oncancel","actionGlobalOpenStateFile","formatDisplay","display","_custom","PINIA_ROOT_LABEL","PINIA_ROOT_ID","formatStoreForInspectorTree","store","id","label","$id","formatStoreForInspectorState","storeNames","Array","from","_s","keys","storeMap","map","storeId","editable","key","getters","filter","get","_getters","reduce","$state","length","getterName","_customProperties","size","customProperties","formatEventData","events","isArray","data","event","push","operations","oldValue","newValue","operation","formatMutationType","direct","patchFunction","patchObject","isTimelineActive","componentStateTypes","MUTATIONS_LAYER_ID","INSPECTOR_ID","assign$1","getStoreType","registerPiniaDevtools","app","logo","packageName","homepage","api","now","addTimelineLayer","color","addInspector","icon","treeFilterPlaceholder","actions","action","tooltip","sendInspectorTree","sendInspectorState","nodeActions","nodeId","$reset","on","inspectComponent","payload","ctx","proxy","componentInstance","_pStores","piniaStores","values","forEach","instanceData","_isOptionsAPI","getInspectorTree","inspectorId","stores","concat","rootNodes","getInspectorState","inspectedStore","editInspectorState","path","has","unshift","editComponentState","startsWith","addStoreToDevtools","settings","logStoreChanges","defaultValue","bind","Date","$onAction","after","onError","args","groupId","runningActionId","addTimelineEvent","layerId","time","subtitle","activeAction","undefined","logType","notifyComponentUpdate","deep","$subscribe","eventData","detached","flush","hotUpdate","_hotUpdate","newStore","info","$dispose","getSettings","patchActionForGrouping","actionNames","storeActions","actionName","_actionId","trackedStore","Proxy","Reflect","apply","arguments","devtoolsPlugin","options","originalHotUpdate","_hmrPayload","createPinia","scope","run","_p","toBeInstalled","install","_a","provide","config","globalProperties","$pinia","plugin","use","_e","Map","isUseStore","fn","newState","oldState","subPatch","targetValue","acceptHMRUpdate","initialUseStore","hot","newModule","_pinia","exportName","useStore","invalidate","existingStore","noop","addSubscription","subscriptions","callback","onCleanup","removeSubscription","idx","indexOf","splice","triggerSubscriptions","slice","fallbackRunWithContext","mergeReactiveObjects","patchToApply","Set","add","hasOwnProperty","skipHydrateSymbol","skipHydrateMap","WeakMap","skipHydrate","obj","defineProperty","shouldHydrate","isComputed","effect","createOptionsStore","initialState","setup","localState","computedGetters","_r","createSetupStore","isOptionsStore","optionsForPlugin","active","$subscribeOptions","onTrigger","isListening","debuggerEvents","_hotUpdating","isSyncListening","actionSubscriptions","hotState","activeListener","$patch","partialStateOrMutator","subscriptionMutation","myListenerId","then","stop","delete","wrapAction","afterCallbackList","onErrorCallbackList","ret","catch","partialStore","stopWatcher","runWithContext","setupStore","prop","actionValue","stateKey","newStateTarget","oldStateSource","getter","getterValue","nonEnumerable","writable","configurable","enumerable","p","extender","extensions","constructor","hydrate","defineStore","idOrOptions","setupOptions","isSetupStore","hasContext","_testing","hotId","currentInstance","vm","cache","mapStoreSuffix","setMapStoreSuffix","suffix","mapStores","reduced","mapState","keysOrMapper","storeKey","mapGetters","mapActions","mapWritableState","storeToRefs","refs","PiniaVuePlugin","_Vue","mixin","beforeCreate","$options","_provided","provideCache","v","parent","destroyed"],"mappings":"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","sourcesContent":["/*!\n  * pinia v2.1.3\n  * (c) 2023 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { hasInjectionContext, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, getCurrentScope, onScopeDispose, getCurrentInstance, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\n/**\n * setActivePinia must be called to handle SSR at the top of functions like\n * `fetch`, `setup`, `serverPrefetch` and others\n */\nlet activePinia;\n/**\n * Sets or unsets the active pinia. Used in SSR and internally when calling\n * actions and getters\n *\n * @param pinia - Pinia instance\n */\n// @ts-expect-error: cannot constrain the type of the return\nconst setActivePinia = (pinia) => (activePinia = pinia);\n/**\n * Get the currently active pinia if there is any.\n */\nconst getActivePinia = () => (hasInjectionContext() && inject(piniaSymbol)) || activePinia;\nconst piniaSymbol = ((process.env.NODE_ENV !== 'production') ? Symbol('pinia') : /* istanbul ignore next */ Symbol());\n\nfunction isPlainObject(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no) {\n    return (o &&\n        typeof o === 'object' &&\n        Object.prototype.toString.call(o) === '[object Object]' &&\n        typeof o.toJSON !== 'function');\n}\n// type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\n// TODO: can we change these to numbers?\n/**\n * Possible types for SubscriptionCallback\n */\nvar MutationType;\n(function (MutationType) {\n    /**\n     * Direct mutation of the state:\n     *\n     * - `store.name = 'new name'`\n     * - `store.$state.name = 'new name'`\n     * - `store.list.push('new item')`\n     */\n    MutationType[\"direct\"] = \"direct\";\n    /**\n     * Mutated the state with `$patch` and an object\n     *\n     * - `store.$patch({ name: 'newName' })`\n     */\n    MutationType[\"patchObject\"] = \"patch object\";\n    /**\n     * Mutated the state with `$patch` and a function\n     *\n     * - `store.$patch(state => state.name = 'newName')`\n     */\n    MutationType[\"patchFunction\"] = \"patch function\";\n    // maybe reset? for $state = {} and $reset\n})(MutationType || (MutationType = {}));\n\nconst IS_CLIENT = typeof window !== 'undefined';\n/**\n * Should we add the devtools plugins.\n * - only if dev mode or forced through the prod devtools flag\n * - not in test\n * - only if window exists (could change in the future)\n */\nconst USE_DEVTOOLS = ((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test') && IS_CLIENT;\n\n/*\n * FileSaver.js A saveAs() FileSaver implementation.\n *\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\n * Morote.\n *\n * License : MIT\n */\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nconst _global = /*#__PURE__*/ (() => typeof window === 'object' && window.window === window\n    ? window\n    : typeof self === 'object' && self.self === self\n        ? self\n        : typeof global === 'object' && global.global === global\n            ? global\n            : typeof globalThis === 'object'\n                ? globalThis\n                : { HTMLElement: null })();\nfunction bom(blob, { autoBom = false } = {}) {\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n    if (autoBom &&\n        /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n        return new Blob([String.fromCharCode(0xfeff), blob], { type: blob.type });\n    }\n    return blob;\n}\nfunction download(url, name, opts) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.onload = function () {\n        saveAs(xhr.response, name, opts);\n    };\n    xhr.onerror = function () {\n        console.error('could not download file');\n    };\n    xhr.send();\n}\nfunction corsEnabled(url) {\n    const xhr = new XMLHttpRequest();\n    // use sync to avoid popup blocker\n    xhr.open('HEAD', url, false);\n    try {\n        xhr.send();\n    }\n    catch (e) { }\n    return xhr.status >= 200 && xhr.status <= 299;\n}\n// `a.click()` doesn't work for all browsers (#465)\nfunction click(node) {\n    try {\n        node.dispatchEvent(new MouseEvent('click'));\n    }\n    catch (e) {\n        const evt = document.createEvent('MouseEvents');\n        evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n        node.dispatchEvent(evt);\n    }\n}\nconst _navigator = \n typeof navigator === 'object' ? navigator : { userAgent: '' };\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nconst isMacOSWebView = /*#__PURE__*/ (() => /Macintosh/.test(_navigator.userAgent) &&\n    /AppleWebKit/.test(_navigator.userAgent) &&\n    !/Safari/.test(_navigator.userAgent))();\nconst saveAs = !IS_CLIENT\n    ? () => { } // noop\n    : // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\n        typeof HTMLAnchorElement !== 'undefined' &&\n            'download' in HTMLAnchorElement.prototype &&\n            !isMacOSWebView\n            ? downloadSaveAs\n            : // Use msSaveOrOpenBlob as a second approach\n                'msSaveOrOpenBlob' in _navigator\n                    ? msSaveAs\n                    : // Fallback to using FileReader and a popup\n                        fileSaverSaveAs;\nfunction downloadSaveAs(blob, name = 'download', opts) {\n    const a = document.createElement('a');\n    a.download = name;\n    a.rel = 'noopener'; // tabnabbing\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n    if (typeof blob === 'string') {\n        // Support regular links\n        a.href = blob;\n        if (a.origin !== location.origin) {\n            if (corsEnabled(a.href)) {\n                download(blob, name, opts);\n            }\n            else {\n                a.target = '_blank';\n                click(a);\n            }\n        }\n        else {\n            click(a);\n        }\n    }\n    else {\n        // Support blobs\n        a.href = URL.createObjectURL(blob);\n        setTimeout(function () {\n            URL.revokeObjectURL(a.href);\n        }, 4e4); // 40s\n        setTimeout(function () {\n            click(a);\n        }, 0);\n    }\n}\nfunction msSaveAs(blob, name = 'download', opts) {\n    if (typeof blob === 'string') {\n        if (corsEnabled(blob)) {\n            download(blob, name, opts);\n        }\n        else {\n            const a = document.createElement('a');\n            a.href = blob;\n            a.target = '_blank';\n            setTimeout(function () {\n                click(a);\n            });\n        }\n    }\n    else {\n        // @ts-ignore: works on windows\n        navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n    }\n}\nfunction fileSaverSaveAs(blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank');\n    if (popup) {\n        popup.document.title = popup.document.body.innerText = 'downloading...';\n    }\n    if (typeof blob === 'string')\n        return download(blob, name, opts);\n    const force = blob.type === 'application/octet-stream';\n    const isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\n    const isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) &&\n        typeof FileReader !== 'undefined') {\n        // Safari doesn't allow downloading of blob URLs\n        const reader = new FileReader();\n        reader.onloadend = function () {\n            let url = reader.result;\n            if (typeof url !== 'string') {\n                popup = null;\n                throw new Error('Wrong reader.result type');\n            }\n            url = isChromeIOS\n                ? url\n                : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n            if (popup) {\n                popup.location.href = url;\n            }\n            else {\n                location.assign(url);\n            }\n            popup = null; // reverse-tabnabbing #460\n        };\n        reader.readAsDataURL(blob);\n    }\n    else {\n        const url = URL.createObjectURL(blob);\n        if (popup)\n            popup.location.assign(url);\n        else\n            location.href = url;\n        popup = null; // reverse-tabnabbing #460\n        setTimeout(function () {\n            URL.revokeObjectURL(url);\n        }, 4e4); // 40s\n    }\n}\n\n/**\n * Shows a toast or console.log\n *\n * @param message - message to log\n * @param type - different color of the tooltip\n */\nfunction toastMessage(message, type) {\n    const piniaMessage = '🍍 ' + message;\n    if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\n        __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\n    }\n    else if (type === 'error') {\n        console.error(piniaMessage);\n    }\n    else if (type === 'warn') {\n        console.warn(piniaMessage);\n    }\n    else {\n        console.log(piniaMessage);\n    }\n}\nfunction isPinia(o) {\n    return '_a' in o && 'install' in o;\n}\n\nfunction checkClipboardAccess() {\n    if (!('clipboard' in navigator)) {\n        toastMessage(`Your browser doesn't support the Clipboard API`, 'error');\n        return true;\n    }\n}\nfunction checkNotFocusedError(error) {\n    if (error instanceof Error &&\n        error.message.toLowerCase().includes('document is not focused')) {\n        toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\n        return true;\n    }\n    return false;\n}\nasync function actionGlobalCopyState(pinia) {\n    if (checkClipboardAccess())\n        return;\n    try {\n        await navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\n        toastMessage('Global state copied to clipboard.');\n    }\n    catch (error) {\n        if (checkNotFocusedError(error))\n            return;\n        toastMessage(`Failed to serialize the state. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nasync function actionGlobalPasteState(pinia) {\n    if (checkClipboardAccess())\n        return;\n    try {\n        pinia.state.value = JSON.parse(await navigator.clipboard.readText());\n        toastMessage('Global state pasted from clipboard.');\n    }\n    catch (error) {\n        if (checkNotFocusedError(error))\n            return;\n        toastMessage(`Failed to deserialize the state from clipboard. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nasync function actionGlobalSaveState(pinia) {\n    try {\n        saveAs(new Blob([JSON.stringify(pinia.state.value)], {\n            type: 'text/plain;charset=utf-8',\n        }), 'pinia-state.json');\n    }\n    catch (error) {\n        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nlet fileInput;\nfunction getFileOpener() {\n    if (!fileInput) {\n        fileInput = document.createElement('input');\n        fileInput.type = 'file';\n        fileInput.accept = '.json';\n    }\n    function openFile() {\n        return new Promise((resolve, reject) => {\n            fileInput.onchange = async () => {\n                const files = fileInput.files;\n                if (!files)\n                    return resolve(null);\n                const file = files.item(0);\n                if (!file)\n                    return resolve(null);\n                return resolve({ text: await file.text(), file });\n            };\n            // @ts-ignore: TODO: changed from 4.3 to 4.4\n            fileInput.oncancel = () => resolve(null);\n            fileInput.onerror = reject;\n            fileInput.click();\n        });\n    }\n    return openFile;\n}\nasync function actionGlobalOpenStateFile(pinia) {\n    try {\n        const open = await getFileOpener();\n        const result = await open();\n        if (!result)\n            return;\n        const { text, file } = result;\n        pinia.state.value = JSON.parse(text);\n        toastMessage(`Global state imported from \"${file.name}\".`);\n    }\n    catch (error) {\n        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\n\nfunction formatDisplay(display) {\n    return {\n        _custom: {\n            display,\n        },\n    };\n}\nconst PINIA_ROOT_LABEL = '🍍 Pinia (root)';\nconst PINIA_ROOT_ID = '_root';\nfunction formatStoreForInspectorTree(store) {\n    return isPinia(store)\n        ? {\n            id: PINIA_ROOT_ID,\n            label: PINIA_ROOT_LABEL,\n        }\n        : {\n            id: store.$id,\n            label: store.$id,\n        };\n}\nfunction formatStoreForInspectorState(store) {\n    if (isPinia(store)) {\n        const storeNames = Array.from(store._s.keys());\n        const storeMap = store._s;\n        const state = {\n            state: storeNames.map((storeId) => ({\n                editable: true,\n                key: storeId,\n                value: store.state.value[storeId],\n            })),\n            getters: storeNames\n                .filter((id) => storeMap.get(id)._getters)\n                .map((id) => {\n                const store = storeMap.get(id);\n                return {\n                    editable: false,\n                    key: id,\n                    value: store._getters.reduce((getters, key) => {\n                        getters[key] = store[key];\n                        return getters;\n                    }, {}),\n                };\n            }),\n        };\n        return state;\n    }\n    const state = {\n        state: Object.keys(store.$state).map((key) => ({\n            editable: true,\n            key,\n            value: store.$state[key],\n        })),\n    };\n    // avoid adding empty getters\n    if (store._getters && store._getters.length) {\n        state.getters = store._getters.map((getterName) => ({\n            editable: false,\n            key: getterName,\n            value: store[getterName],\n        }));\n    }\n    if (store._customProperties.size) {\n        state.customProperties = Array.from(store._customProperties).map((key) => ({\n            editable: true,\n            key,\n            value: store[key],\n        }));\n    }\n    return state;\n}\nfunction formatEventData(events) {\n    if (!events)\n        return {};\n    if (Array.isArray(events)) {\n        // TODO: handle add and delete for arrays and objects\n        return events.reduce((data, event) => {\n            data.keys.push(event.key);\n            data.operations.push(event.type);\n            data.oldValue[event.key] = event.oldValue;\n            data.newValue[event.key] = event.newValue;\n            return data;\n        }, {\n            oldValue: {},\n            keys: [],\n            operations: [],\n            newValue: {},\n        });\n    }\n    else {\n        return {\n            operation: formatDisplay(events.type),\n            key: formatDisplay(events.key),\n            oldValue: events.oldValue,\n            newValue: events.newValue,\n        };\n    }\n}\nfunction formatMutationType(type) {\n    switch (type) {\n        case MutationType.direct:\n            return 'mutation';\n        case MutationType.patchFunction:\n            return '$patch';\n        case MutationType.patchObject:\n            return '$patch';\n        default:\n            return 'unknown';\n    }\n}\n\n// timeline can be paused when directly changing the state\nlet isTimelineActive = true;\nconst componentStateTypes = [];\nconst MUTATIONS_LAYER_ID = 'pinia:mutations';\nconst INSPECTOR_ID = 'pinia';\nconst { assign: assign$1 } = Object;\n/**\n * Gets the displayed name of a store in devtools\n *\n * @param id - id of the store\n * @returns a formatted string\n */\nconst getStoreType = (id) => '🍍 ' + id;\n/**\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\n * as soon as it is added to the application.\n *\n * @param app - Vue application\n * @param pinia - pinia instance\n */\nfunction registerPiniaDevtools(app, pinia) {\n    setupDevtoolsPlugin({\n        id: 'dev.esm.pinia',\n        label: 'Pinia 🍍',\n        logo: 'https://pinia.vuejs.org/logo.svg',\n        packageName: 'pinia',\n        homepage: 'https://pinia.vuejs.org',\n        componentStateTypes,\n        app,\n    }, (api) => {\n        if (typeof api.now !== 'function') {\n            toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\n        }\n        api.addTimelineLayer({\n            id: MUTATIONS_LAYER_ID,\n            label: `Pinia 🍍`,\n            color: 0xe5df88,\n        });\n        api.addInspector({\n            id: INSPECTOR_ID,\n            label: 'Pinia 🍍',\n            icon: 'storage',\n            treeFilterPlaceholder: 'Search stores',\n            actions: [\n                {\n                    icon: 'content_copy',\n                    action: () => {\n                        actionGlobalCopyState(pinia);\n                    },\n                    tooltip: 'Serialize and copy the state',\n                },\n                {\n                    icon: 'content_paste',\n                    action: async () => {\n                        await actionGlobalPasteState(pinia);\n                        api.sendInspectorTree(INSPECTOR_ID);\n                        api.sendInspectorState(INSPECTOR_ID);\n                    },\n                    tooltip: 'Replace the state with the content of your clipboard',\n                },\n                {\n                    icon: 'save',\n                    action: () => {\n                        actionGlobalSaveState(pinia);\n                    },\n                    tooltip: 'Save the state as a JSON file',\n                },\n                {\n                    icon: 'folder_open',\n                    action: async () => {\n                        await actionGlobalOpenStateFile(pinia);\n                        api.sendInspectorTree(INSPECTOR_ID);\n                        api.sendInspectorState(INSPECTOR_ID);\n                    },\n                    tooltip: 'Import the state from a JSON file',\n                },\n            ],\n            nodeActions: [\n                {\n                    icon: 'restore',\n                    tooltip: 'Reset the state (with \"$reset\")',\n                    action: (nodeId) => {\n                        const store = pinia._s.get(nodeId);\n                        if (!store) {\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it wasn't found.`, 'warn');\n                        }\n                        else if (typeof store.$reset !== 'function') {\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it doesn't have a \"$reset\" method implemented.`, 'warn');\n                        }\n                        else {\n                            store.$reset();\n                            toastMessage(`Store \"${nodeId}\" reset.`);\n                        }\n                    },\n                },\n            ],\n        });\n        api.on.inspectComponent((payload, ctx) => {\n            const proxy = (payload.componentInstance &&\n                payload.componentInstance.proxy);\n            if (proxy && proxy._pStores) {\n                const piniaStores = payload.componentInstance.proxy._pStores;\n                Object.values(piniaStores).forEach((store) => {\n                    payload.instanceData.state.push({\n                        type: getStoreType(store.$id),\n                        key: 'state',\n                        editable: true,\n                        value: store._isOptionsAPI\n                            ? {\n                                _custom: {\n                                    value: toRaw(store.$state),\n                                    actions: [\n                                        {\n                                            icon: 'restore',\n                                            tooltip: 'Reset the state of this store',\n                                            action: () => store.$reset(),\n                                        },\n                                    ],\n                                },\n                            }\n                            : // NOTE: workaround to unwrap transferred refs\n                                Object.keys(store.$state).reduce((state, key) => {\n                                    state[key] = store.$state[key];\n                                    return state;\n                                }, {}),\n                    });\n                    if (store._getters && store._getters.length) {\n                        payload.instanceData.state.push({\n                            type: getStoreType(store.$id),\n                            key: 'getters',\n                            editable: false,\n                            value: store._getters.reduce((getters, key) => {\n                                try {\n                                    getters[key] = store[key];\n                                }\n                                catch (error) {\n                                    // @ts-expect-error: we just want to show it in devtools\n                                    getters[key] = error;\n                                }\n                                return getters;\n                            }, {}),\n                        });\n                    }\n                });\n            }\n        });\n        api.on.getInspectorTree((payload) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                let stores = [pinia];\n                stores = stores.concat(Array.from(pinia._s.values()));\n                payload.rootNodes = (payload.filter\n                    ? stores.filter((store) => '$id' in store\n                        ? store.$id\n                            .toLowerCase()\n                            .includes(payload.filter.toLowerCase())\n                        : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase()))\n                    : stores).map(formatStoreForInspectorTree);\n            }\n        });\n        api.on.getInspectorState((payload) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\n                    ? pinia\n                    : pinia._s.get(payload.nodeId);\n                if (!inspectedStore) {\n                    // this could be the selected store restored for a different project\n                    // so it's better not to say anything here\n                    return;\n                }\n                if (inspectedStore) {\n                    payload.state = formatStoreForInspectorState(inspectedStore);\n                }\n            }\n        });\n        api.on.editInspectorState((payload, ctx) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\n                    ? pinia\n                    : pinia._s.get(payload.nodeId);\n                if (!inspectedStore) {\n                    return toastMessage(`store \"${payload.nodeId}\" not found`, 'error');\n                }\n                const { path } = payload;\n                if (!isPinia(inspectedStore)) {\n                    // access only the state\n                    if (path.length !== 1 ||\n                        !inspectedStore._customProperties.has(path[0]) ||\n                        path[0] in inspectedStore.$state) {\n                        path.unshift('$state');\n                    }\n                }\n                else {\n                    // Root access, we can omit the `.value` because the devtools API does it for us\n                    path.unshift('state');\n                }\n                isTimelineActive = false;\n                payload.set(inspectedStore, path, payload.state.value);\n                isTimelineActive = true;\n            }\n        });\n        api.on.editComponentState((payload) => {\n            if (payload.type.startsWith('🍍')) {\n                const storeId = payload.type.replace(/^🍍\\s*/, '');\n                const store = pinia._s.get(storeId);\n                if (!store) {\n                    return toastMessage(`store \"${storeId}\" not found`, 'error');\n                }\n                const { path } = payload;\n                if (path[0] !== 'state') {\n                    return toastMessage(`Invalid path for store \"${storeId}\":\\n${path}\\nOnly state can be modified.`);\n                }\n                // rewrite the first entry to be able to directly set the state as\n                // well as any other path\n                path[0] = '$state';\n                isTimelineActive = false;\n                payload.set(store, path, payload.state.value);\n                isTimelineActive = true;\n            }\n        });\n    });\n}\nfunction addStoreToDevtools(app, store) {\n    if (!componentStateTypes.includes(getStoreType(store.$id))) {\n        componentStateTypes.push(getStoreType(store.$id));\n    }\n    setupDevtoolsPlugin({\n        id: 'dev.esm.pinia',\n        label: 'Pinia 🍍',\n        logo: 'https://pinia.vuejs.org/logo.svg',\n        packageName: 'pinia',\n        homepage: 'https://pinia.vuejs.org',\n        componentStateTypes,\n        app,\n        settings: {\n            logStoreChanges: {\n                label: 'Notify about new/deleted stores',\n                type: 'boolean',\n                defaultValue: true,\n            },\n            // useEmojis: {\n            //   label: 'Use emojis in messages ⚡️',\n            //   type: 'boolean',\n            //   defaultValue: true,\n            // },\n        },\n    }, (api) => {\n        // gracefully handle errors\n        const now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\n        store.$onAction(({ after, onError, name, args }) => {\n            const groupId = runningActionId++;\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: {\n                    time: now(),\n                    title: '🛫 ' + name,\n                    subtitle: 'start',\n                    data: {\n                        store: formatDisplay(store.$id),\n                        action: formatDisplay(name),\n                        args,\n                    },\n                    groupId,\n                },\n            });\n            after((result) => {\n                activeAction = undefined;\n                api.addTimelineEvent({\n                    layerId: MUTATIONS_LAYER_ID,\n                    event: {\n                        time: now(),\n                        title: '🛬 ' + name,\n                        subtitle: 'end',\n                        data: {\n                            store: formatDisplay(store.$id),\n                            action: formatDisplay(name),\n                            args,\n                            result,\n                        },\n                        groupId,\n                    },\n                });\n            });\n            onError((error) => {\n                activeAction = undefined;\n                api.addTimelineEvent({\n                    layerId: MUTATIONS_LAYER_ID,\n                    event: {\n                        time: now(),\n                        logType: 'error',\n                        title: '💥 ' + name,\n                        subtitle: 'end',\n                        data: {\n                            store: formatDisplay(store.$id),\n                            action: formatDisplay(name),\n                            args,\n                            error,\n                        },\n                        groupId,\n                    },\n                });\n            });\n        }, true);\n        store._customProperties.forEach((name) => {\n            watch(() => unref(store[name]), (newValue, oldValue) => {\n                api.notifyComponentUpdate();\n                api.sendInspectorState(INSPECTOR_ID);\n                if (isTimelineActive) {\n                    api.addTimelineEvent({\n                        layerId: MUTATIONS_LAYER_ID,\n                        event: {\n                            time: now(),\n                            title: 'Change',\n                            subtitle: name,\n                            data: {\n                                newValue,\n                                oldValue,\n                            },\n                            groupId: activeAction,\n                        },\n                    });\n                }\n            }, { deep: true });\n        });\n        store.$subscribe(({ events, type }, state) => {\n            api.notifyComponentUpdate();\n            api.sendInspectorState(INSPECTOR_ID);\n            if (!isTimelineActive)\n                return;\n            // rootStore.state[store.id] = state\n            const eventData = {\n                time: now(),\n                title: formatMutationType(type),\n                data: assign$1({ store: formatDisplay(store.$id) }, formatEventData(events)),\n                groupId: activeAction,\n            };\n            // reset for the next mutation\n            activeAction = undefined;\n            if (type === MutationType.patchFunction) {\n                eventData.subtitle = '⤵️';\n            }\n            else if (type === MutationType.patchObject) {\n                eventData.subtitle = '🧩';\n            }\n            else if (events && !Array.isArray(events)) {\n                eventData.subtitle = events.type;\n            }\n            if (events) {\n                eventData.data['rawEvent(s)'] = {\n                    _custom: {\n                        display: 'DebuggerEvent',\n                        type: 'object',\n                        tooltip: 'raw DebuggerEvent[]',\n                        value: events,\n                    },\n                };\n            }\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: eventData,\n            });\n        }, { detached: true, flush: 'sync' });\n        const hotUpdate = store._hotUpdate;\n        store._hotUpdate = markRaw((newStore) => {\n            hotUpdate(newStore);\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: {\n                    time: now(),\n                    title: '🔥 ' + store.$id,\n                    subtitle: 'HMR update',\n                    data: {\n                        store: formatDisplay(store.$id),\n                        info: formatDisplay(`HMR update`),\n                    },\n                },\n            });\n            // update the devtools too\n            api.notifyComponentUpdate();\n            api.sendInspectorTree(INSPECTOR_ID);\n            api.sendInspectorState(INSPECTOR_ID);\n        });\n        const { $dispose } = store;\n        store.$dispose = () => {\n            $dispose();\n            api.notifyComponentUpdate();\n            api.sendInspectorTree(INSPECTOR_ID);\n            api.sendInspectorState(INSPECTOR_ID);\n            api.getSettings().logStoreChanges &&\n                toastMessage(`Disposed \"${store.$id}\" store 🗑`);\n        };\n        // trigger an update so it can display new registered stores\n        api.notifyComponentUpdate();\n        api.sendInspectorTree(INSPECTOR_ID);\n        api.sendInspectorState(INSPECTOR_ID);\n        api.getSettings().logStoreChanges &&\n            toastMessage(`\"${store.$id}\" store installed 🆕`);\n    });\n}\nlet runningActionId = 0;\nlet activeAction;\n/**\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\n * mutation to the action.\n *\n * @param store - store to patch\n * @param actionNames - list of actionst to patch\n */\nfunction patchActionForGrouping(store, actionNames) {\n    // original actions of the store as they are given by pinia. We are going to override them\n    const actions = actionNames.reduce((storeActions, actionName) => {\n        // use toRaw to avoid tracking #541\n        storeActions[actionName] = toRaw(store)[actionName];\n        return storeActions;\n    }, {});\n    for (const actionName in actions) {\n        store[actionName] = function () {\n            // setActivePinia(store._p)\n            // the running action id is incremented in a before action hook\n            const _actionId = runningActionId;\n            const trackedStore = new Proxy(store, {\n                get(...args) {\n                    activeAction = _actionId;\n                    return Reflect.get(...args);\n                },\n                set(...args) {\n                    activeAction = _actionId;\n                    return Reflect.set(...args);\n                },\n            });\n            return actions[actionName].apply(trackedStore, arguments);\n        };\n    }\n}\n/**\n * pinia.use(devtoolsPlugin)\n */\nfunction devtoolsPlugin({ app, store, options }) {\n    // HMR module\n    if (store.$id.startsWith('__hot:')) {\n        return;\n    }\n    // detect option api vs setup api\n    if (options.state) {\n        store._isOptionsAPI = true;\n    }\n    // only wrap actions in option-defined stores as this technique relies on\n    // wrapping the context of the action with a proxy\n    if (typeof options.state === 'function') {\n        patchActionForGrouping(\n        // @ts-expect-error: can cast the store...\n        store, Object.keys(options.actions));\n        const originalHotUpdate = store._hotUpdate;\n        // Upgrade the HMR to also update the new actions\n        toRaw(store)._hotUpdate = function (newStore) {\n            originalHotUpdate.apply(this, arguments);\n            patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions));\n        };\n    }\n    addStoreToDevtools(app, \n    // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\n    store);\n}\n\n/**\n * Creates a Pinia instance to be used by the application\n */\nfunction createPinia() {\n    const scope = effectScope(true);\n    // NOTE: here we could check the window object for a state and directly set it\n    // if there is anything like it with Vue 3 SSR\n    const state = scope.run(() => ref({}));\n    let _p = [];\n    // plugins added before calling app.use(pinia)\n    let toBeInstalled = [];\n    const pinia = markRaw({\n        install(app) {\n            // this allows calling useStore() outside of a component setup after\n            // installing pinia's plugin\n            setActivePinia(pinia);\n            if (!isVue2) {\n                pinia._a = app;\n                app.provide(piniaSymbol, pinia);\n                app.config.globalProperties.$pinia = pinia;\n                /* istanbul ignore else */\n                if (USE_DEVTOOLS) {\n                    registerPiniaDevtools(app, pinia);\n                }\n                toBeInstalled.forEach((plugin) => _p.push(plugin));\n                toBeInstalled = [];\n            }\n        },\n        use(plugin) {\n            if (!this._a && !isVue2) {\n                toBeInstalled.push(plugin);\n            }\n            else {\n                _p.push(plugin);\n            }\n            return this;\n        },\n        _p,\n        // it's actually undefined here\n        // @ts-expect-error\n        _a: null,\n        _e: scope,\n        _s: new Map(),\n        state,\n    });\n    // pinia devtools rely on dev only features so they cannot be forced unless\n    // the dev build of Vue is used. Avoid old browsers like IE11.\n    if (USE_DEVTOOLS && typeof Proxy !== 'undefined') {\n        pinia.use(devtoolsPlugin);\n    }\n    return pinia;\n}\n\n/**\n * Checks if a function is a `StoreDefinition`.\n *\n * @param fn - object to test\n * @returns true if `fn` is a StoreDefinition\n */\nconst isUseStore = (fn) => {\n    return typeof fn === 'function' && typeof fn.$id === 'string';\n};\n/**\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\n * remove any key not existing in `newState` and recursively merge plain\n * objects.\n *\n * @param newState - new state object to be patched\n * @param oldState - old state that should be used to patch newState\n * @returns - newState\n */\nfunction patchObject(newState, oldState) {\n    // no need to go through symbols because they cannot be serialized anyway\n    for (const key in oldState) {\n        const subPatch = oldState[key];\n        // skip the whole sub tree\n        if (!(key in newState)) {\n            continue;\n        }\n        const targetValue = newState[key];\n        if (isPlainObject(targetValue) &&\n            isPlainObject(subPatch) &&\n            !isRef(subPatch) &&\n            !isReactive(subPatch)) {\n            newState[key] = patchObject(targetValue, subPatch);\n        }\n        else {\n            // objects are either a bit more complex (e.g. refs) or primitives, so we\n            // just set the whole thing\n            if (isVue2) {\n                set(newState, key, subPatch);\n            }\n            else {\n                newState[key] = subPatch;\n            }\n        }\n    }\n    return newState;\n}\n/**\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\n *\n * @example\n * ```js\n * const useUser = defineStore(...)\n * if (import.meta.hot) {\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\n * }\n * ```\n *\n * @param initialUseStore - return of the defineStore to hot update\n * @param hot - `import.meta.hot`\n */\nfunction acceptHMRUpdate(initialUseStore, hot) {\n    // strip as much as possible from iife.prod\n    if (!(process.env.NODE_ENV !== 'production')) {\n        return () => { };\n    }\n    return (newModule) => {\n        const pinia = hot.data.pinia || initialUseStore._pinia;\n        if (!pinia) {\n            // this store is still not used\n            return;\n        }\n        // preserve the pinia instance across loads\n        hot.data.pinia = pinia;\n        // console.log('got data', newStore)\n        for (const exportName in newModule) {\n            const useStore = newModule[exportName];\n            // console.log('checking for', exportName)\n            if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\n                // console.log('Accepting update for', useStore.$id)\n                const id = useStore.$id;\n                if (id !== initialUseStore.$id) {\n                    console.warn(`The id of the store changed from \"${initialUseStore.$id}\" to \"${id}\". Reloading.`);\n                    // return import.meta.hot.invalidate()\n                    return hot.invalidate();\n                }\n                const existingStore = pinia._s.get(id);\n                if (!existingStore) {\n                    console.log(`[Pinia]: skipping hmr because store doesn't exist yet`);\n                    return;\n                }\n                useStore(pinia, existingStore);\n            }\n        }\n    };\n}\n\nconst noop = () => { };\nfunction addSubscription(subscriptions, callback, detached, onCleanup = noop) {\n    subscriptions.push(callback);\n    const removeSubscription = () => {\n        const idx = subscriptions.indexOf(callback);\n        if (idx > -1) {\n            subscriptions.splice(idx, 1);\n            onCleanup();\n        }\n    };\n    if (!detached && getCurrentScope()) {\n        onScopeDispose(removeSubscription);\n    }\n    return removeSubscription;\n}\nfunction triggerSubscriptions(subscriptions, ...args) {\n    subscriptions.slice().forEach((callback) => {\n        callback(...args);\n    });\n}\n\nconst fallbackRunWithContext = (fn) => fn();\nfunction mergeReactiveObjects(target, patchToApply) {\n    // Handle Map instances\n    if (target instanceof Map && patchToApply instanceof Map) {\n        patchToApply.forEach((value, key) => target.set(key, value));\n    }\n    // Handle Set instances\n    if (target instanceof Set && patchToApply instanceof Set) {\n        patchToApply.forEach(target.add, target);\n    }\n    // no need to go through symbols because they cannot be serialized anyway\n    for (const key in patchToApply) {\n        if (!patchToApply.hasOwnProperty(key))\n            continue;\n        const subPatch = patchToApply[key];\n        const targetValue = target[key];\n        if (isPlainObject(targetValue) &&\n            isPlainObject(subPatch) &&\n            target.hasOwnProperty(key) &&\n            !isRef(subPatch) &&\n            !isReactive(subPatch)) {\n            // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\n            // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\n            // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\n            target[key] = mergeReactiveObjects(targetValue, subPatch);\n        }\n        else {\n            // @ts-expect-error: subPatch is a valid value\n            target[key] = subPatch;\n        }\n    }\n    return target;\n}\nconst skipHydrateSymbol = (process.env.NODE_ENV !== 'production')\n    ? Symbol('pinia:skipHydration')\n    : /* istanbul ignore next */ Symbol();\nconst skipHydrateMap = /*#__PURE__*/ new WeakMap();\n/**\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\n *\n * @param obj - target object\n * @returns obj\n */\nfunction skipHydrate(obj) {\n    return isVue2\n        ? // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\n            /* istanbul ignore next */ skipHydrateMap.set(obj, 1) && obj\n        : Object.defineProperty(obj, skipHydrateSymbol, {});\n}\n/**\n * Returns whether a value should be hydrated\n *\n * @param obj - target variable\n * @returns true if `obj` should be hydrated\n */\nfunction shouldHydrate(obj) {\n    return isVue2\n        ? /* istanbul ignore next */ !skipHydrateMap.has(obj)\n        : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\n}\nconst { assign } = Object;\nfunction isComputed(o) {\n    return !!(isRef(o) && o.effect);\n}\nfunction createOptionsStore(id, options, pinia, hot) {\n    const { state, actions, getters } = options;\n    const initialState = pinia.state.value[id];\n    let store;\n    function setup() {\n        if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n            /* istanbul ignore if */\n            if (isVue2) {\n                set(pinia.state.value, id, state ? state() : {});\n            }\n            else {\n                pinia.state.value[id] = state ? state() : {};\n            }\n        }\n        // avoid creating a state in pinia.state.value\n        const localState = (process.env.NODE_ENV !== 'production') && hot\n            ? // use ref() to unwrap refs inside state TODO: check if this is still necessary\n                toRefs(ref(state ? state() : {}).value)\n            : toRefs(pinia.state.value[id]);\n        return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name) => {\n            if ((process.env.NODE_ENV !== 'production') && name in localState) {\n                console.warn(`[🍍]: A getter cannot have the same name as another state property. Rename one of them. Found with \"${name}\" in store \"${id}\".`);\n            }\n            computedGetters[name] = markRaw(computed(() => {\n                setActivePinia(pinia);\n                // it was created just before\n                const store = pinia._s.get(id);\n                // allow cross using stores\n                /* istanbul ignore next */\n                if (isVue2 && !store._r)\n                    return;\n                // @ts-expect-error\n                // return getters![name].call(context, context)\n                // TODO: avoid reading the getter while assigning with a global variable\n                return getters[name].call(store, store);\n            }));\n            return computedGetters;\n        }, {}));\n    }\n    store = createSetupStore(id, setup, options, pinia, hot, true);\n    return store;\n}\nfunction createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {\n    let scope;\n    const optionsForPlugin = assign({ actions: {} }, options);\n    /* istanbul ignore if */\n    if ((process.env.NODE_ENV !== 'production') && !pinia._e.active) {\n        throw new Error('Pinia destroyed');\n    }\n    // watcher options for $subscribe\n    const $subscribeOptions = {\n        deep: true,\n        // flush: 'post',\n    };\n    /* istanbul ignore else */\n    if ((process.env.NODE_ENV !== 'production') && !isVue2) {\n        $subscribeOptions.onTrigger = (event) => {\n            /* istanbul ignore else */\n            if (isListening) {\n                debuggerEvents = event;\n                // avoid triggering this while the store is being built and the state is being set in pinia\n            }\n            else if (isListening == false && !store._hotUpdating) {\n                // let patch send all the events together later\n                /* istanbul ignore else */\n                if (Array.isArray(debuggerEvents)) {\n                    debuggerEvents.push(event);\n                }\n                else {\n                    console.error('🍍 debuggerEvents should be an array. This is most likely an internal Pinia bug.');\n                }\n            }\n        };\n    }\n    // internal state\n    let isListening; // set to true at the end\n    let isSyncListening; // set to true at the end\n    let subscriptions = [];\n    let actionSubscriptions = [];\n    let debuggerEvents;\n    const initialState = pinia.state.value[$id];\n    // avoid setting the state for option stores if it is set\n    // by the setup\n    if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n        /* istanbul ignore if */\n        if (isVue2) {\n            set(pinia.state.value, $id, {});\n        }\n        else {\n            pinia.state.value[$id] = {};\n        }\n    }\n    const hotState = ref({});\n    // avoid triggering too many listeners\n    // https://github.com/vuejs/pinia/issues/1129\n    let activeListener;\n    function $patch(partialStateOrMutator) {\n        let subscriptionMutation;\n        isListening = isSyncListening = false;\n        // reset the debugger events since patches are sync\n        /* istanbul ignore else */\n        if ((process.env.NODE_ENV !== 'production')) {\n            debuggerEvents = [];\n        }\n        if (typeof partialStateOrMutator === 'function') {\n            partialStateOrMutator(pinia.state.value[$id]);\n            subscriptionMutation = {\n                type: MutationType.patchFunction,\n                storeId: $id,\n                events: debuggerEvents,\n            };\n        }\n        else {\n            mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\n            subscriptionMutation = {\n                type: MutationType.patchObject,\n                payload: partialStateOrMutator,\n                storeId: $id,\n                events: debuggerEvents,\n            };\n        }\n        const myListenerId = (activeListener = Symbol());\n        nextTick().then(() => {\n            if (activeListener === myListenerId) {\n                isListening = true;\n            }\n        });\n        isSyncListening = true;\n        // because we paused the watcher, we need to manually call the subscriptions\n        triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\n    }\n    const $reset = isOptionsStore\n        ? function $reset() {\n            const { state } = options;\n            const newState = state ? state() : {};\n            // we use a patch to group all changes into one single subscription\n            this.$patch(($state) => {\n                assign($state, newState);\n            });\n        }\n        : /* istanbul ignore next */\n            (process.env.NODE_ENV !== 'production')\n                ? () => {\n                    throw new Error(`🍍: Store \"${$id}\" is built using the setup syntax and does not implement $reset().`);\n                }\n                : noop;\n    function $dispose() {\n        scope.stop();\n        subscriptions = [];\n        actionSubscriptions = [];\n        pinia._s.delete($id);\n    }\n    /**\n     * Wraps an action to handle subscriptions.\n     *\n     * @param name - name of the action\n     * @param action - action to wrap\n     * @returns a wrapped action to handle subscriptions\n     */\n    function wrapAction(name, action) {\n        return function () {\n            setActivePinia(pinia);\n            const args = Array.from(arguments);\n            const afterCallbackList = [];\n            const onErrorCallbackList = [];\n            function after(callback) {\n                afterCallbackList.push(callback);\n            }\n            function onError(callback) {\n                onErrorCallbackList.push(callback);\n            }\n            // @ts-expect-error\n            triggerSubscriptions(actionSubscriptions, {\n                args,\n                name,\n                store,\n                after,\n                onError,\n            });\n            let ret;\n            try {\n                ret = action.apply(this && this.$id === $id ? this : store, args);\n                // handle sync errors\n            }\n            catch (error) {\n                triggerSubscriptions(onErrorCallbackList, error);\n                throw error;\n            }\n            if (ret instanceof Promise) {\n                return ret\n                    .then((value) => {\n                    triggerSubscriptions(afterCallbackList, value);\n                    return value;\n                })\n                    .catch((error) => {\n                    triggerSubscriptions(onErrorCallbackList, error);\n                    return Promise.reject(error);\n                });\n            }\n            // trigger after callbacks\n            triggerSubscriptions(afterCallbackList, ret);\n            return ret;\n        };\n    }\n    const _hmrPayload = /*#__PURE__*/ markRaw({\n        actions: {},\n        getters: {},\n        state: [],\n        hotState,\n    });\n    const partialStore = {\n        _p: pinia,\n        // _s: scope,\n        $id,\n        $onAction: addSubscription.bind(null, actionSubscriptions),\n        $patch,\n        $reset,\n        $subscribe(callback, options = {}) {\n            const removeSubscription = addSubscription(subscriptions, callback, options.detached, () => stopWatcher());\n            const stopWatcher = scope.run(() => watch(() => pinia.state.value[$id], (state) => {\n                if (options.flush === 'sync' ? isSyncListening : isListening) {\n                    callback({\n                        storeId: $id,\n                        type: MutationType.direct,\n                        events: debuggerEvents,\n                    }, state);\n                }\n            }, assign({}, $subscribeOptions, options)));\n            return removeSubscription;\n        },\n        $dispose,\n    };\n    /* istanbul ignore if */\n    if (isVue2) {\n        // start as non ready\n        partialStore._r = false;\n    }\n    const store = reactive((process.env.NODE_ENV !== 'production') || USE_DEVTOOLS\n        ? assign({\n            _hmrPayload,\n            _customProperties: markRaw(new Set()), // devtools custom properties\n        }, partialStore\n        // must be added later\n        // setupStore\n        )\n        : partialStore);\n    // store the partial store now so the setup of stores can instantiate each other before they are finished without\n    // creating infinite loops.\n    pinia._s.set($id, store);\n    const runWithContext = (pinia._a && pinia._a.runWithContext) || fallbackRunWithContext;\n    // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\n    const setupStore = pinia._e.run(() => {\n        scope = effectScope();\n        return runWithContext(() => scope.run(setup));\n    });\n    // overwrite existing actions to support $onAction\n    for (const key in setupStore) {\n        const prop = setupStore[key];\n        if ((isRef(prop) && !isComputed(prop)) || isReactive(prop)) {\n            // mark it as a piece of state to be serialized\n            if ((process.env.NODE_ENV !== 'production') && hot) {\n                set(hotState.value, key, toRef(setupStore, key));\n                // createOptionStore directly sets the state in pinia.state.value so we\n                // can just skip that\n            }\n            else if (!isOptionsStore) {\n                // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\n                if (initialState && shouldHydrate(prop)) {\n                    if (isRef(prop)) {\n                        prop.value = initialState[key];\n                    }\n                    else {\n                        // probably a reactive object, lets recursively assign\n                        // @ts-expect-error: prop is unknown\n                        mergeReactiveObjects(prop, initialState[key]);\n                    }\n                }\n                // transfer the ref to the pinia state to keep everything in sync\n                /* istanbul ignore if */\n                if (isVue2) {\n                    set(pinia.state.value[$id], key, prop);\n                }\n                else {\n                    pinia.state.value[$id][key] = prop;\n                }\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                _hmrPayload.state.push(key);\n            }\n            // action\n        }\n        else if (typeof prop === 'function') {\n            // @ts-expect-error: we are overriding the function we avoid wrapping if\n            const actionValue = (process.env.NODE_ENV !== 'production') && hot ? prop : wrapAction(key, prop);\n            // this a hot module replacement store because the hotUpdate method needs\n            // to do it with the right context\n            /* istanbul ignore if */\n            if (isVue2) {\n                set(setupStore, key, actionValue);\n            }\n            else {\n                // @ts-expect-error\n                setupStore[key] = actionValue;\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                _hmrPayload.actions[key] = prop;\n            }\n            // list actions so they can be used in plugins\n            // @ts-expect-error\n            optionsForPlugin.actions[key] = prop;\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            // add getters for devtools\n            if (isComputed(prop)) {\n                _hmrPayload.getters[key] = isOptionsStore\n                    ? // @ts-expect-error\n                        options.getters[key]\n                    : prop;\n                if (IS_CLIENT) {\n                    const getters = setupStore._getters ||\n                        // @ts-expect-error: same\n                        (setupStore._getters = markRaw([]));\n                    getters.push(key);\n                }\n            }\n        }\n    }\n    // add the state, getters, and action properties\n    /* istanbul ignore if */\n    if (isVue2) {\n        Object.keys(setupStore).forEach((key) => {\n            set(store, key, setupStore[key]);\n        });\n    }\n    else {\n        assign(store, setupStore);\n        // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\n        // Make `storeToRefs()` work with `reactive()` #799\n        assign(toRaw(store), setupStore);\n    }\n    // use this instead of a computed with setter to be able to create it anywhere\n    // without linking the computed lifespan to wherever the store is first\n    // created.\n    Object.defineProperty(store, '$state', {\n        get: () => ((process.env.NODE_ENV !== 'production') && hot ? hotState.value : pinia.state.value[$id]),\n        set: (state) => {\n            /* istanbul ignore if */\n            if ((process.env.NODE_ENV !== 'production') && hot) {\n                throw new Error('cannot set hotState');\n            }\n            $patch(($state) => {\n                assign($state, state);\n            });\n        },\n    });\n    // add the hotUpdate before plugins to allow them to override it\n    /* istanbul ignore else */\n    if ((process.env.NODE_ENV !== 'production')) {\n        store._hotUpdate = markRaw((newStore) => {\n            store._hotUpdating = true;\n            newStore._hmrPayload.state.forEach((stateKey) => {\n                if (stateKey in store.$state) {\n                    const newStateTarget = newStore.$state[stateKey];\n                    const oldStateSource = store.$state[stateKey];\n                    if (typeof newStateTarget === 'object' &&\n                        isPlainObject(newStateTarget) &&\n                        isPlainObject(oldStateSource)) {\n                        patchObject(newStateTarget, oldStateSource);\n                    }\n                    else {\n                        // transfer the ref\n                        newStore.$state[stateKey] = oldStateSource;\n                    }\n                }\n                // patch direct access properties to allow store.stateProperty to work as\n                // store.$state.stateProperty\n                set(store, stateKey, toRef(newStore.$state, stateKey));\n            });\n            // remove deleted state properties\n            Object.keys(store.$state).forEach((stateKey) => {\n                if (!(stateKey in newStore.$state)) {\n                    del(store, stateKey);\n                }\n            });\n            // avoid devtools logging this as a mutation\n            isListening = false;\n            isSyncListening = false;\n            pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\n            isSyncListening = true;\n            nextTick().then(() => {\n                isListening = true;\n            });\n            for (const actionName in newStore._hmrPayload.actions) {\n                const action = newStore[actionName];\n                set(store, actionName, wrapAction(actionName, action));\n            }\n            // TODO: does this work in both setup and option store?\n            for (const getterName in newStore._hmrPayload.getters) {\n                const getter = newStore._hmrPayload.getters[getterName];\n                const getterValue = isOptionsStore\n                    ? // special handling of options api\n                        computed(() => {\n                            setActivePinia(pinia);\n                            return getter.call(store, store);\n                        })\n                    : getter;\n                set(store, getterName, getterValue);\n            }\n            // remove deleted getters\n            Object.keys(store._hmrPayload.getters).forEach((key) => {\n                if (!(key in newStore._hmrPayload.getters)) {\n                    del(store, key);\n                }\n            });\n            // remove old actions\n            Object.keys(store._hmrPayload.actions).forEach((key) => {\n                if (!(key in newStore._hmrPayload.actions)) {\n                    del(store, key);\n                }\n            });\n            // update the values used in devtools and to allow deleting new properties later on\n            store._hmrPayload = newStore._hmrPayload;\n            store._getters = newStore._getters;\n            store._hotUpdating = false;\n        });\n    }\n    if (USE_DEVTOOLS) {\n        const nonEnumerable = {\n            writable: true,\n            configurable: true,\n            // avoid warning on devtools trying to display this property\n            enumerable: false,\n        };\n        ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach((p) => {\n            Object.defineProperty(store, p, assign({ value: store[p] }, nonEnumerable));\n        });\n    }\n    /* istanbul ignore if */\n    if (isVue2) {\n        // mark the store as ready before plugins\n        store._r = true;\n    }\n    // apply all plugins\n    pinia._p.forEach((extender) => {\n        /* istanbul ignore else */\n        if (USE_DEVTOOLS) {\n            const extensions = scope.run(() => extender({\n                store,\n                app: pinia._a,\n                pinia,\n                options: optionsForPlugin,\n            }));\n            Object.keys(extensions || {}).forEach((key) => store._customProperties.add(key));\n            assign(store, extensions);\n        }\n        else {\n            assign(store, scope.run(() => extender({\n                store,\n                app: pinia._a,\n                pinia,\n                options: optionsForPlugin,\n            })));\n        }\n    });\n    if ((process.env.NODE_ENV !== 'production') &&\n        store.$state &&\n        typeof store.$state === 'object' &&\n        typeof store.$state.constructor === 'function' &&\n        !store.$state.constructor.toString().includes('[native code]')) {\n        console.warn(`[🍍]: The \"state\" must be a plain object. It cannot be\\n` +\n            `\\tstate: () => new MyClass()\\n` +\n            `Found in store \"${store.$id}\".`);\n    }\n    // only apply hydrate to option stores with an initial state in pinia\n    if (initialState &&\n        isOptionsStore &&\n        options.hydrate) {\n        options.hydrate(store.$state, initialState);\n    }\n    isListening = true;\n    isSyncListening = true;\n    return store;\n}\nfunction defineStore(\n// TODO: add proper types from above\nidOrOptions, setup, setupOptions) {\n    let id;\n    let options;\n    const isSetupStore = typeof setup === 'function';\n    if (typeof idOrOptions === 'string') {\n        id = idOrOptions;\n        // the option store setup will contain the actual options in this case\n        options = isSetupStore ? setupOptions : setup;\n    }\n    else {\n        options = idOrOptions;\n        id = idOrOptions.id;\n        if ((process.env.NODE_ENV !== 'production') && typeof id !== 'string') {\n            throw new Error(`[🍍]: \"defineStore()\" must be passed a store id as its first argument.`);\n        }\n    }\n    function useStore(pinia, hot) {\n        const hasContext = hasInjectionContext();\n        pinia =\n            // in test mode, ignore the argument provided as we can always retrieve a\n            // pinia instance with getActivePinia()\n            ((process.env.NODE_ENV === 'test') && activePinia && activePinia._testing ? null : pinia) ||\n                (hasContext ? inject(piniaSymbol, null) : null);\n        if (pinia)\n            setActivePinia(pinia);\n        if ((process.env.NODE_ENV !== 'production') && !activePinia) {\n            throw new Error(`[🍍]: \"getActivePinia()\" was called but there was no active Pinia. Did you forget to install pinia?\\n` +\n                `\\tconst pinia = createPinia()\\n` +\n                `\\tapp.use(pinia)\\n` +\n                `This will fail in production.`);\n        }\n        pinia = activePinia;\n        if (!pinia._s.has(id)) {\n            // creating the store registers it in `pinia._s`\n            if (isSetupStore) {\n                createSetupStore(id, setup, options, pinia);\n            }\n            else {\n                createOptionsStore(id, options, pinia);\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                // @ts-expect-error: not the right inferred type\n                useStore._pinia = pinia;\n            }\n        }\n        const store = pinia._s.get(id);\n        if ((process.env.NODE_ENV !== 'production') && hot) {\n            const hotId = '__hot:' + id;\n            const newStore = isSetupStore\n                ? createSetupStore(hotId, setup, options, pinia, true)\n                : createOptionsStore(hotId, assign({}, options), pinia, true);\n            hot._hotUpdate(newStore);\n            // cleanup the state properties and the store from the cache\n            delete pinia.state.value[hotId];\n            pinia._s.delete(hotId);\n        }\n        if ((process.env.NODE_ENV !== 'production') && IS_CLIENT) {\n            const currentInstance = getCurrentInstance();\n            // save stores in instances to access them devtools\n            if (currentInstance &&\n                currentInstance.proxy &&\n                // avoid adding stores that are just built for hot module replacement\n                !hot) {\n                const vm = currentInstance.proxy;\n                const cache = '_pStores' in vm ? vm._pStores : (vm._pStores = {});\n                cache[id] = store;\n            }\n        }\n        // StoreGeneric cannot be casted towards Store\n        return store;\n    }\n    useStore.$id = id;\n    return useStore;\n}\n\nlet mapStoreSuffix = 'Store';\n/**\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\n * interface if you are using TypeScript.\n *\n * @param suffix - new suffix\n */\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\n) {\n    mapStoreSuffix = suffix;\n}\n/**\n * Allows using stores without the composition API (`setup()`) by generating an\n * object to be spread in the `computed` field of a component. It accepts a list\n * of store definitions.\n *\n * @example\n * ```js\n * export default {\n *   computed: {\n *     // other computed properties\n *     ...mapStores(useUserStore, useCartStore)\n *   },\n *\n *   created() {\n *     this.userStore // store with id \"user\"\n *     this.cartStore // store with id \"cart\"\n *   }\n * }\n * ```\n *\n * @param stores - list of stores to map to an object\n */\nfunction mapStores(...stores) {\n    if ((process.env.NODE_ENV !== 'production') && Array.isArray(stores[0])) {\n        console.warn(`[🍍]: Directly pass all stores to \"mapStores()\" without putting them in an array:\\n` +\n            `Replace\\n` +\n            `\\tmapStores([useAuthStore, useCartStore])\\n` +\n            `with\\n` +\n            `\\tmapStores(useAuthStore, useCartStore)\\n` +\n            `This will fail in production if not fixed.`);\n        stores = stores[0];\n    }\n    return stores.reduce((reduced, useStore) => {\n        // @ts-expect-error: $id is added by defineStore\n        reduced[useStore.$id + mapStoreSuffix] = function () {\n            return useStore(this.$pinia);\n        };\n        return reduced;\n    }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapState(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            reduced[key] = function () {\n                return useStore(this.$pinia)[key];\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function () {\n                const store = useStore(this.$pinia);\n                const storeKey = keysOrMapper[key];\n                // for some reason TS is unable to infer the type of storeKey to be a\n                // function\n                return typeof storeKey === 'function'\n                    ? storeKey.call(this, store)\n                    : store[storeKey];\n            };\n            return reduced;\n        }, {});\n}\n/**\n * Alias for `mapState()`. You should use `mapState()` instead.\n * @deprecated use `mapState()` instead.\n */\nconst mapGetters = mapState;\n/**\n * Allows directly using actions from your store without using the composition\n * API (`setup()`) by generating an object to be spread in the `methods` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapActions(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function (...args) {\n                return useStore(this.$pinia)[key](...args);\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function (...args) {\n                return useStore(this.$pinia)[keysOrMapper[key]](...args);\n            };\n            return reduced;\n        }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapWritableState(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            // @ts-ignore\n            reduced[key] = {\n                get() {\n                    return useStore(this.$pinia)[key];\n                },\n                set(value) {\n                    // it's easier to type it here as any\n                    return (useStore(this.$pinia)[key] = value);\n                },\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-ignore\n            reduced[key] = {\n                get() {\n                    return useStore(this.$pinia)[keysOrMapper[key]];\n                },\n                set(value) {\n                    // it's easier to type it here as any\n                    return (useStore(this.$pinia)[keysOrMapper[key]] = value);\n                },\n            };\n            return reduced;\n        }, {});\n}\n\n/**\n * Creates an object of references with all the state, getters, and plugin-added\n * state properties of the store. Similar to `toRefs()` but specifically\n * designed for Pinia stores so methods and non reactive properties are\n * completely ignored.\n *\n * @param store - store to extract the refs from\n */\nfunction storeToRefs(store) {\n    // See https://github.com/vuejs/pinia/issues/852\n    // It's easier to just use toRefs() even if it includes more stuff\n    if (isVue2) {\n        // @ts-expect-error: toRefs include methods and others\n        return toRefs(store);\n    }\n    else {\n        store = toRaw(store);\n        const refs = {};\n        for (const key in store) {\n            const value = store[key];\n            if (isRef(value) || isReactive(value)) {\n                // @ts-expect-error: the key is state or getter\n                refs[key] =\n                    // ---\n                    toRef(store, key);\n            }\n        }\n        return refs;\n    }\n}\n\n/**\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\n * https://pinia.vuejs.org/ssr/nuxt.html.\n *\n * @example\n * ```js\n * import Vue from 'vue'\n * import { PiniaVuePlugin, createPinia } from 'pinia'\n *\n * Vue.use(PiniaVuePlugin)\n * const pinia = createPinia()\n *\n * new Vue({\n *   el: '#app',\n *   // ...\n *   pinia,\n * })\n * ```\n *\n * @param _Vue - `Vue` imported from 'vue'.\n */\nconst PiniaVuePlugin = function (_Vue) {\n    // Equivalent of\n    // app.config.globalProperties.$pinia = pinia\n    _Vue.mixin({\n        beforeCreate() {\n            const options = this.$options;\n            if (options.pinia) {\n                const pinia = options.pinia;\n                // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\n                /* istanbul ignore else */\n                if (!this._provided) {\n                    const provideCache = {};\n                    Object.defineProperty(this, '_provided', {\n                        get: () => provideCache,\n                        set: (v) => Object.assign(provideCache, v),\n                    });\n                }\n                this._provided[piniaSymbol] = pinia;\n                // propagate the pinia instance in an SSR friendly way\n                // avoid adding it to nuxt twice\n                /* istanbul ignore else */\n                if (!this.$pinia) {\n                    this.$pinia = pinia;\n                }\n                pinia._a = this;\n                if (IS_CLIENT) {\n                    // this allows calling useStore() outside of a component setup after\n                    // installing pinia's plugin\n                    setActivePinia(pinia);\n                }\n                if (USE_DEVTOOLS) {\n                    registerPiniaDevtools(pinia._a, pinia);\n                }\n            }\n            else if (!this.$pinia && options.parent && options.parent.$pinia) {\n                this.$pinia = options.parent.$pinia;\n            }\n        },\n        destroyed() {\n            delete this._pStores;\n        },\n    });\n};\n\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, skipHydrate, storeToRefs };\n"]},"metadata":{},"sourceType":"module"}