{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { MainContainer, Navbar, // FormContainer,\nOutputContainer, // InputContainer,\nInfoFrete } from \"@/components/styles.js\";\nimport FormInput from \"@/components/form/FormInput.vue\";\nexport default {\n  components: {\n    MainContainer: MainContainer,\n    Navbar: Navbar,\n    // FormContainer,\n    OutputContainer: OutputContainer,\n    // InputContainer,\n    InfoFrete: InfoFrete,\n    FormInput: FormInput\n  },\n  data: function data() {\n    return {\n      appName: \"\",\n      showOutput: false,\n      data: [],\n      citys: [],\n      city: \"Selecione o destino\",\n      weight: \"\",\n      frete: {\n        menorValor: {\n          transportadora: \"\",\n          tempo: \"\",\n          preco: \"\"\n        },\n        maisRapido: {\n          transportadora: \"\",\n          tempo: \"\",\n          preco: \"\"\n        }\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    // Implemente aqui o GET dos dados da API REST\n    // para que isso ocorra na inicialização da pagina\n    fetch(\"http://localhost:3000/transport\").then(function (response) {\n      response.json().then(function (data) {\n        _this.data = data;\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n    this.appName = \"Melhor Frete\";\n  },\n  methods: {\n    // Implemente aqui os metodos utilizados na pagina\n    methodFoo: function methodFoo() {\n      console.log(this.appName);\n    },\n    receiveData: function receiveData(city, weight) {\n      this.city = city;\n      this.weight = weight;\n      this.handleSubmit();\n    },\n    handleSubmit: function handleSubmit(event) {\n      event.preventDefault(); // verificar se os campos estão preenchidos\n\n      if (this.city === \"Selecione o destino\" || this.weight === \"\" || this.weight == 0) {\n        this.$alert(\"\", \"Insira os valores para realizar a análise\", \"warning\");\n        return;\n      } // calcular o frete\n\n\n      this.calculate();\n      this.showOutput = true;\n    },\n    calculate: function calculate() {\n      var _this2 = this;\n\n      // encontrar frete com menor valor para a cidade\n      var menorValor = this.data.reduce(function (prev, current) {\n        if (_this2.convertCashToFloat(_this2.weight > 100 ? prev.cost_transport_heavy : prev.cost_transport_light) < _this2.convertCashToFloat(_this2.weight > 100 ? current.cost_transport_heavy : current.cost_transport_light)) {\n          return prev.city === _this2.city ? prev : current;\n        }\n\n        return current.city === _this2.city ? current : prev;\n      }); // encontrar frete mais rápido para a cidade\n\n      var maisRapido = this.data.reduce(function (prev, current) {\n        if (_this2.convertTimeToFloat(prev.lead_time) < _this2.convertTimeToFloat(current.lead_time)) {\n          return prev.city === _this2.city ? prev : current;\n        }\n\n        return current.city === _this2.city ? current : prev;\n      });\n      this.frete.menorValor = {\n        transportadora: menorValor.name,\n        tempo: menorValor.lead_time,\n        preco: \"R$ \".concat((this.convertCashToFloat(this.weight > 100 ? menorValor.cost_transport_heavy : menorValor.cost_transport_light) * this.weight).toFixed(2).replace(\".\", \",\"))\n      };\n      this.frete.maisRapido = {\n        transportadora: maisRapido.name,\n        tempo: maisRapido.lead_time,\n        preco: \"R$ \".concat((this.convertCashToFloat(this.weight > 100 ? maisRapido.cost_transport_heavy : maisRapido.cost_transport_light) * this.weight).toFixed(2).replace(\".\", \",\"))\n      };\n    },\n    convertCashToFloat: function convertCashToFloat(value) {\n      return parseFloat(value.replace(\"R$ \", \"\").replace(\",\", \".\"));\n    },\n    convertTimeToFloat: function convertTimeToFloat(value) {\n      return parseInt(value.replace(\"h\", \"\"));\n    },\n    clear: function clear(event) {\n      event.preventDefault();\n      this.showOutput = false;\n      this.city = \"Selecione o destino\";\n      this.weight = \"\";\n      this.frete = {\n        menorValor: {\n          transportadora: \"\",\n          tempo: \"\",\n          preco: \"\"\n        },\n        maisRapido: {\n          transportadora: \"\",\n          tempo: \"\",\n          preco: \"\"\n        }\n      };\n    }\n  },\n  watch: {\n    data: function data() {\n      var _this3 = this;\n\n      this.data.forEach(function (element) {\n        _this3.citys.push({\n          city: element.city,\n          key: element.id\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA,SACAA,aADA,EAEAC,MAFA,EAGA;AACAC,eAJA,EAKA;AACAC,SANA,QAOA,wBAPA;AAQA;AAEA;AACAC;AACAJ,gCADA;AAEAC,kBAFA;AAGA;AACAC,oCAJA;AAKA;AACAC,wBANA;AAOAE;AAPA,GADA;AAUAC,MAVA,kBAUA;AACA;AACAC,iBADA;AAEAC,uBAFA;AAGAF,cAHA;AAIAG,eAJA;AAMAC,iCANA;AAOAC,gBAPA;AASAC;AACAC;AACAC,4BADA;AAEAC,mBAFA;AAGAC;AAHA,SADA;AAMAC;AACAH,4BADA;AAEAC,mBAFA;AAGAC;AAHA;AANA;AATA;AAsBA,GAjCA;AAkCAE,SAlCA,qBAkCA;AAAA;;AACA;AACA;AAEAC,6CACAC,IADA,CACA;AACAC;AACA;AACA,OAFA;AAGA,KALA,EAMAC,KANA,CAMA;AACAC;AACA,KARA;AAUA;AACA,GAjDA;AAkDAC;AACA;AACAC,aAFA,uBAEA;AACAF;AACA,KAJA;AAKAG,eALA,uBAKAhB,IALA,EAKAC,MALA,EAKA;AACA;AACA;AAEA;AACA,KAVA;AAWAgB,gBAXA,wBAWAC,KAXA,EAWA;AACAA,6BADA,CAGA;;AACA,UACA,uCACA,kBADA,IAEA,gBAHA,EAIA;AACA;AACA;AACA,OAXA,CAaA;;;AACA;AAEA;AACA,KA5BA;AA6BAC,aA7BA,uBA6BA;AAAA;;AACA;AACA;AACA,YACA,0BACA,sBACAC,yBADA,GAEAA,yBAHA,IAKA,0BACA,sBACAC,4BADA,GAEAA,4BAHA,CANA,EAWA;AACA;AACA;;AACA;AACA,OAhBA,EAFA,CAoBA;;AACA;AACA,YACA,4CACA,4CAFA,EAGA;AACA;AACA;;AACA;AACA,OARA;AAUA;AACAjB,uCADA;AAEAC,mCAFA;AAGAC,6BACA,wBACA,oBACAH,+BADA,GAEAA,+BAHA,IAIA,WALA,EAOAmB,OAPA,CAOA,CAPA,EAQAC,OARA,CAQA,GARA,EAQA,GARA;AAHA;AAcA;AACAnB,uCADA;AAEAC,mCAFA;AAGAC,6BACA,wBACA,oBACAC,+BADA,GAEAA,+BAHA,IAIA,WALA,EAOAe,OAPA,CAOA,CAPA,EAQAC,OARA,CAQA,GARA,EAQA,GARA;AAHA;AAaA,KAvFA;AAwFAC,sBAxFA,8BAwFAC,KAxFA,EAwFA;AACA;AACA,KA1FA;AA2FAC,sBA3FA,8BA2FAD,KA3FA,EA2FA;AACA;AACA,KA7FA;AA8FAE,SA9FA,iBA8FAT,KA9FA,EA8FA;AACAA;AACA;AACA;AACA;AACA;AACAf;AACAC,4BADA;AAEAC,mBAFA;AAGAC;AAHA,SADA;AAMAC;AACAH,4BADA;AAEAC,mBAFA;AAGAC;AAHA;AANA;AAYA;AA/GA,GAlDA;AAmKAsB;AACAhC,QADA,kBACA;AAAA;;AACA;AACA;AAAAI;AAAA6B;AAAA;AACA,OAFA;AAGA;AALA;AAnKA","names":["MainContainer","Navbar","OutputContainer","InfoFrete","components","FormInput","data","appName","showOutput","citys","city","weight","frete","menorValor","transportadora","tempo","preco","maisRapido","created","fetch","then","response","catch","console","methods","methodFoo","receiveData","handleSubmit","event","calculate","prev","current","toFixed","replace","convertCashToFloat","value","convertTimeToFloat","clear","watch","key"],"sourceRoot":"src/components","sources":["BestTransport.vue"],"sourcesContent":["<template>\n  <div class=\"title\">\n    <Navbar>\n      <img src=\"../assets/logo.png\" alt=\"Logo da empresa\" />\n      <b>{{ appName }}</b>\n    </Navbar>\n\n    <MainContainer>\n      <!-- <FormContainer>\n        <div class=\"title\">\n          <img src=\"../assets/map-clock.png\" alt=\"\" />\n          <h1>Insira o destino e o peso</h1>\n        </div>\n\n        <InputContainer>\n          <label for=\"cidade\">Destino</label>\n          <select v-model=\"city\">\n            <option selected>Selecione o destino</option>\n            <option v-for=\"c in citys\" :key=\"c.id\">\n              {{ c.city }}\n            </option>\n          </select>\n        </InputContainer>\n\n        <InputContainer>\n          <label for=\"peso\">Peso</label>\n          <input placeholder=\"300 kg\" type=\"number\" v-model=\"weight\" />\n        </InputContainer>\n\n        <button v-on:click=\"handleSubmit\">Analisar</button>\n      </FormContainer> -->\n\n      <FormInput :citys=\"citys\" :send-data=\"receiveData\" />\n\n      <!-- saida dos dados -->\n      <OutputContainer>\n        <div v-if=\"showOutput\">\n          <h2>\n            Estas são as melhores alternativas de frete que encontramos para\n            você.\n          </h2>\n          <!-- frete mais barato -->\n          <InfoFrete>\n            <div class=\"info\">\n              <div class=\"img-container\">\n                <img src=\"../assets/give-money.png\" alt=\"mão com moeda\" />\n              </div>\n\n              <div class=\"info-text\">\n                <p><strong>Frete com menor valor</strong></p>\n                <p>\n                  Transportadora: {{ this.frete.menorValor.transportadora }}\n                </p>\n                <p>Tempo estimado: {{ this.frete.menorValor.tempo }}</p>\n              </div>\n            </div>\n\n            <div class=\"price\">\n              <p><strong>Preço</strong></p>\n              <p>{{ this.frete.menorValor.preco }}</p>\n            </div>\n          </InfoFrete>\n          <!-- frete com entrega mais rápida -->\n          <InfoFrete>\n            <div class=\"info\">\n              <div class=\"img-container\">\n                <img src=\"../assets/time.png\" alt=\"mão com moeda\" />\n              </div>\n\n              <div class=\"info-text\">\n                <p><strong>Frete mais rápido</strong></p>\n                <p>\n                  Transportadora: {{ this.frete.maisRapido.transportadora }}\n                </p>\n                <p>Tempo estimado: {{ this.frete.maisRapido.tempo }}</p>\n              </div>\n            </div>\n\n            <div class=\"price\">\n              <p><strong>Preço</strong></p>\n              <p>{{ this.frete.maisRapido.preco }}</p>\n            </div>\n          </InfoFrete>\n\n          <button v-on:click=\"clear\">Limpar</button>\n        </div>\n\n        <h2 v-else>Nenhum dado selecionado</h2>\n      </OutputContainer>\n    </MainContainer>\n  </div>\n</template>\n\n<script>\nimport {\n  MainContainer,\n  Navbar,\n  // FormContainer,\n  OutputContainer,\n  // InputContainer,\n  InfoFrete,\n} from \"@/components/styles.js\";\nimport FormInput from \"@/components/form/FormInput.vue\";\n\nexport default {\n  components: {\n    MainContainer,\n    Navbar,\n    // FormContainer,\n    OutputContainer,\n    // InputContainer,\n    InfoFrete,\n    FormInput,\n  },\n  data() {\n    return {\n      appName: \"\",\n      showOutput: false,\n      data: [],\n      citys: [],\n\n      city: \"Selecione o destino\",\n      weight: \"\",\n\n      frete: {\n        menorValor: {\n          transportadora: \"\",\n          tempo: \"\",\n          preco: \"\",\n        },\n        maisRapido: {\n          transportadora: \"\",\n          tempo: \"\",\n          preco: \"\",\n        },\n      },\n    };\n  },\n  created() {\n    // Implemente aqui o GET dos dados da API REST\n    // para que isso ocorra na inicialização da pagina\n\n    fetch(\"http://localhost:3000/transport\")\n      .then((response) => {\n        response.json().then((data) => {\n          this.data = data;\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    this.appName = \"Melhor Frete\";\n  },\n  methods: {\n    // Implemente aqui os metodos utilizados na pagina\n    methodFoo() {\n      console.log(this.appName);\n    },\n    receiveData(city, weight) {\n      this.city = city;\n      this.weight = weight;\n\n      this.handleSubmit();\n    },\n    handleSubmit(event) {\n      event.preventDefault();\n\n      // verificar se os campos estão preenchidos\n      if (\n        this.city === \"Selecione o destino\" ||\n        this.weight === \"\" ||\n        this.weight == 0\n      ) {\n        this.$alert(\"\", \"Insira os valores para realizar a análise\", \"warning\");\n        return;\n      }\n\n      // calcular o frete\n      this.calculate();\n\n      this.showOutput = true;\n    },\n    calculate() {\n      // encontrar frete com menor valor para a cidade\n      const menorValor = this.data.reduce((prev, current) => {\n        if (\n          this.convertCashToFloat(\n            this.weight > 100\n              ? prev.cost_transport_heavy\n              : prev.cost_transport_light\n          ) <\n          this.convertCashToFloat(\n            this.weight > 100\n              ? current.cost_transport_heavy\n              : current.cost_transport_light\n          )\n        ) {\n          return prev.city === this.city ? prev : current;\n        }\n        return current.city === this.city ? current : prev;\n      });\n\n      // encontrar frete mais rápido para a cidade\n      const maisRapido = this.data.reduce((prev, current) => {\n        if (\n          this.convertTimeToFloat(prev.lead_time) <\n          this.convertTimeToFloat(current.lead_time)\n        ) {\n          return prev.city === this.city ? prev : current;\n        }\n        return current.city === this.city ? current : prev;\n      });\n\n      this.frete.menorValor = {\n        transportadora: menorValor.name,\n        tempo: menorValor.lead_time,\n        preco: `R$ ${(\n          this.convertCashToFloat(\n            this.weight > 100\n              ? menorValor.cost_transport_heavy\n              : menorValor.cost_transport_light\n          ) * this.weight\n        )\n          .toFixed(2)\n          .replace(\".\", \",\")}`,\n      };\n\n      this.frete.maisRapido = {\n        transportadora: maisRapido.name,\n        tempo: maisRapido.lead_time,\n        preco: `R$ ${(\n          this.convertCashToFloat(\n            this.weight > 100\n              ? maisRapido.cost_transport_heavy\n              : maisRapido.cost_transport_light\n          ) * this.weight\n        )\n          .toFixed(2)\n          .replace(\".\", \",\")}`,\n      };\n    },\n    convertCashToFloat(value) {\n      return parseFloat(value.replace(\"R$ \", \"\").replace(\",\", \".\"));\n    },\n    convertTimeToFloat(value) {\n      return parseInt(value.replace(\"h\", \"\"));\n    },\n    clear(event) {\n      event.preventDefault();\n      this.showOutput = false;\n      this.city = \"Selecione o destino\";\n      this.weight = \"\";\n      this.frete = {\n        menorValor: {\n          transportadora: \"\",\n          tempo: \"\",\n          preco: \"\",\n        },\n        maisRapido: {\n          transportadora: \"\",\n          tempo: \"\",\n          preco: \"\",\n        },\n      };\n    },\n  },\n  watch: {\n    data() {\n      this.data.forEach((element) => {\n        this.citys.push({ city: element.city, key: element.id });\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.title .navbar {\n  background-color: #00aca6 !important;\n}\n\n.title .navbar-brand {\n  margin-left: 20px;\n}\n\n.title .navbar-brand img {\n  margin-right: 10px;\n  width: 30px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}