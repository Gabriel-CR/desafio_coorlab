{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { MainContainer, Navbar, FormContainer, OutputContainer, InputContainer, InfoFrete } from \"@/components/styles.js\";\nexport default {\n  components: {\n    MainContainer: MainContainer,\n    Navbar: Navbar,\n    FormContainer: FormContainer,\n    OutputContainer: OutputContainer,\n    InputContainer: InputContainer,\n    InfoFrete: InfoFrete\n  },\n  data: function data() {\n    var appName = \"\";\n    var showOutput = false;\n    var data = [];\n    var citys = [];\n    var city = \"Selecione o destino\";\n    var weight = \"\";\n    var frete = {\n      menorValor: {\n        transportadora: \"\",\n        tempo: \"\",\n        preco: \"\"\n      },\n      maisRapido: {\n        transportadora: \"\",\n        tempo: \"\",\n        preco: \"\"\n      }\n    };\n    return {\n      appName: appName,\n      showOutput: showOutput,\n      data: data,\n      citys: citys,\n      city: city,\n      weight: weight,\n      frete: frete\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    // Implemente aqui o GET dos dados da API REST\n    // para que isso ocorra na inicialização da pagina\n    fetch(\"http://localhost:3000/transport\").then(function (response) {\n      response.json().then(function (data) {\n        _this.data = data;\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n    this.appName = \"Melhor Frete\";\n  },\n  methods: {\n    // Implemente aqui os metodos utilizados na pagina\n    methodFoo: function methodFoo() {\n      console.log(this.appName);\n    },\n    handleSubmit: function handleSubmit(event) {\n      event.preventDefault(); // verificar se os campos estão preenchidos\n\n      if (this.city === \"Selecione o destino\" || this.weight === \"\") {\n        alert(\"Preencha todos os campos\");\n        return;\n      } // calcular o frete\n\n\n      this.calculate();\n      this.showOutput = true; // console.log(this.frete.menorValor);\n      // console.log(this.frete.maisRapido);\n    },\n    calculate: function calculate() {\n      this.frete.menorValor = {\n        transportadora: this.data[0].name,\n        tempo: this.data[0].lead_time,\n        preco: this.data[0].cost_transport_light\n      };\n      this.frete.maisRapido = {\n        transportadora: this.data[0].name,\n        tempo: this.data[0].lead_time,\n        preco: this.data[0].cost_transport_light\n      };\n\n      if (this.weight > 100) {\n        this.frete.menorValor.preco = this.data[0].cost_transport_heavy;\n        this.frete.maisRapido.preco = this.data[0].cost_transport_heavy;\n      } // encontrar frete com menor valor\n\n\n      for (var i = 0; i < this.data.length; i++) {\n        if (this.data[i].city == this.city) {\n          // console.log(\n          //   parseFloat(\n          //     this.data[i].cost_transport_heavy\n          //       .replace(\"R$ \", \"\")\n          //       .replace(\",\", \".\")\n          //   ) * this.weight\n          // );\n          // console.log(this.data[i].cost_transport_heavy);\n          var value = this.convertToFloat(this.data[i].cost_transport_heavy) * this.weight;\n          var oldValue = this.convertToFloat(this.frete.menorValor.preco) * this.weight;\n\n          if (value < oldValue) {\n            this.frete.menorValor.transportadora = this.data[i].name;\n            this.frete.menorValor.tempo = this.data[i].lead_time;\n            this.frete.menorValor.preco = \"R$ \".concat(value);\n          }\n        }\n      } // encontrar frete mais rápido\n\n\n      for (var _i = 0; _i < this.data.length; _i++) {\n        if (this.data[_i].city == this.city) {\n          if (this.convertToFloat(this.data[_i].lead_time) < this.convertToFloat(this.frete.maisRapido.tempo)) {\n            this.frete.maisRapido.transportadora = this.data[_i].name;\n            this.frete.maisRapido.tempo = this.data[_i].lead_time;\n            this.frete.maisRapido.preco = \"R$ \".concat(this.convertToFloat(this.data[_i].cost_transport_light) * this.weight);\n          }\n        }\n      }\n    },\n    convertToFloat: function convertToFloat(value) {\n      return parseFloat(value.replace(\"R$ \", \"\").replace(\",\", \".\"));\n    },\n    clear: function clear(event) {\n      event.preventDefault();\n      this.showOutput = false;\n      this.city = \"Selecione o destino\";\n      this.weight = \"\";\n      this.frete = {\n        menorValor: {\n          transportadora: \"\",\n          tempo: \"\",\n          preco: \"\"\n        },\n        maisRapido: {\n          transportadora: \"\",\n          tempo: \"\",\n          preco: \"\"\n        }\n      };\n    }\n  },\n  watch: {\n    data: function data() {\n      var _this2 = this;\n\n      this.data.forEach(function (element) {\n        _this2.citys.push({\n          city: element.city,\n          key: element.id\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA,SACAA,aADA,EAEAC,MAFA,EAGAC,aAHA,EAIAC,eAJA,EAKAC,cALA,EAMAC,SANA,QAOA,wBAPA;AASA;AACAC;AACAN,gCADA;AAEAC,kBAFA;AAGAC,gCAHA;AAIAC,oCAJA;AAKAC,kCALA;AAMAC;AANA,GADA;AASAE,MATA,kBASA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACAC;AACAC,0BADA;AAEAC,iBAFA;AAGAC;AAHA,OADA;AAMAC;AACAH,0BADA;AAEAC,iBAFA;AAGAC;AAHA;AANA;AAaA;AACAE,sBADA;AAEAC,4BAFA;AAGAP,gBAHA;AAIAQ,kBAJA;AAKAC,gBALA;AAMAC,oBANA;AAOAC;AAPA;AASA,GAxCA;AAyCAC,SAzCA,qBAyCA;AAAA;;AACA;AACA;AAEAC,6CACAC,IADA,CACA;AACAC;AACA;AACA,OAFA;AAGA,KALA,EAMAC,KANA,CAMA;AACAC;AACA,KARA;AAUA;AACA,GAxDA;AAyDAC;AACA;AACAC,aAFA,uBAEA;AACAF;AACA,KAJA;AAKAG,gBALA,wBAKAC,KALA,EAKA;AACAA,6BADA,CAGA;;AACA;AACAC;AACA;AACA,OAPA,CASA;;;AACA;AAEA,6BAZA,CAaA;AACA;AACA,KApBA;AAqBAC,aArBA,uBAqBA;AACA;AACArB,yCADA;AAEAC,qCAFA;AAGAC;AAHA;AAMA;AACAF,yCADA;AAEAC,qCAFA;AAGAC;AAHA;;AAMA;AACA;AACA;AACA,OAhBA,CAkBA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBACA,yDACA,WAFA;AAGA,yBACA,8DADA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAzCA,CA2CA;;;AACA;AACA;AACA,cACA,+CACA,gDAFA,EAGA;AACA;AACA;AACA,uDACA,0DACA,WAFA;AAIA;AACA;AACA;AACA,KAhFA;AAiFAoB,kBAjFA,0BAiFAC,KAjFA,EAiFA;AACA;AACA,KAnFA;AAoFAC,SApFA,iBAoFAL,KApFA,EAoFA;AACAA;AACA;AACA;AACA;AACA;AACApB;AACAC,4BADA;AAEAC,mBAFA;AAGAC;AAHA,SADA;AAMAC;AACAH,4BADA;AAEAC,mBAFA;AAGAC;AAHA;AANA;AAYA;AArGA,GAzDA;AAgKAuB;AACA3B,QADA,kBACA;AAAA;;AACA;AACA;AAAAS;AAAAmB;AAAA;AACA,OAFA;AAGA;AALA;AAhKA","names":["MainContainer","Navbar","FormContainer","OutputContainer","InputContainer","InfoFrete","components","data","menorValor","transportadora","tempo","preco","maisRapido","appName","showOutput","citys","city","weight","frete","created","fetch","then","response","catch","console","methods","methodFoo","handleSubmit","event","alert","calculate","convertToFloat","value","clear","watch","key"],"sourceRoot":"src/components","sources":["BestTransport.vue"],"sourcesContent":["<template>\n  <div class=\"title\">\n    <Navbar>\n      <img src=\"../assets/logo.png\" alt=\"Logo da empresa\" />\n      <b>{{ appName }}</b>\n    </Navbar>\n\n    <MainContainer>\n      <FormContainer>\n        <div class=\"title\">\n          <img src=\"../assets/map-clock.png\" alt=\"\" />\n          <h1>Insira o destino e o peso</h1>\n        </div>\n\n        <!-- input de destino -->\n        <InputContainer>\n          <label for=\"cidade\">Destino</label>\n          <select v-model=\"city\">\n            <option selected>Selecione o destino</option>\n            <option v-for=\"c in citys\" :key=\"c.id\">\n              {{ c.city }}\n            </option>\n          </select>\n        </InputContainer>\n\n        <!-- input de peso -->\n        <InputContainer>\n          <label for=\"peso\">Peso</label>\n          <input placeholder=\"300 kg\" type=\"number\" v-model=\"weight\" />\n        </InputContainer>\n\n        <!-- botao de analisar -->\n        <button v-on:click=\"handleSubmit\">Analisar</button>\n      </FormContainer>\n\n      <!-- saida dos dados -->\n      <OutputContainer>\n        <div v-if=\"showOutput\">\n          <h2>\n            Estas são as melhores alternativas de frete que encontramos para\n            você.\n          </h2>\n          <InfoFrete>\n            <div class=\"info\">\n              <div class=\"img-container\">\n                <img src=\"../assets/give-money.png\" alt=\"mão com moeda\" />\n              </div>\n              <div class=\"info-text\">\n                <p><strong>Frete com menor valor</strong></p>\n                <p>\n                  Transportadora: {{ this.frete.menorValor.transportadora }}\n                </p>\n                <p>Tempo estimado: {{ this.frete.menorValor.tempo }}</p>\n              </div>\n            </div>\n            <div class=\"price\">\n              <p><strong>Preço</strong></p>\n              <p>{{ this.frete.menorValor.preco }}</p>\n            </div>\n          </InfoFrete>\n          <InfoFrete>\n            <div class=\"info\">\n              <div class=\"img-container\">\n                <img src=\"../assets/time.png\" alt=\"mão com moeda\" />\n              </div>\n              <div class=\"info-text\">\n                <p><strong>Frete mais rápido</strong></p>\n                <p>\n                  Transportadora: {{ this.frete.maisRapido.transportadora }}\n                </p>\n                <p>Tempo estimado: {{ this.frete.maisRapido.tempo }}</p>\n              </div>\n            </div>\n            <div class=\"price\">\n              <p><strong>Preço</strong></p>\n              <p>{{ this.frete.maisRapido.preco }}</p>\n            </div>\n          </InfoFrete>\n          <button v-on:click=\"clear\">Limpar</button>\n        </div>\n        <h2 v-else>Nenhum dado selecionado</h2>\n      </OutputContainer>\n    </MainContainer>\n  </div>\n</template>\n\n<script>\nimport {\n  MainContainer,\n  Navbar,\n  FormContainer,\n  OutputContainer,\n  InputContainer,\n  InfoFrete,\n} from \"@/components/styles.js\";\n\nexport default {\n  components: {\n    MainContainer,\n    Navbar,\n    FormContainer,\n    OutputContainer,\n    InputContainer,\n    InfoFrete,\n  },\n  data() {\n    const appName = \"\";\n    const showOutput = false;\n    const data = [];\n    const citys = [];\n\n    const city = \"Selecione o destino\";\n    const weight = \"\";\n\n    const frete = {\n      menorValor: {\n        transportadora: \"\",\n        tempo: \"\",\n        preco: \"\",\n      },\n      maisRapido: {\n        transportadora: \"\",\n        tempo: \"\",\n        preco: \"\",\n      },\n    };\n\n    return {\n      appName,\n      showOutput,\n      data,\n      citys,\n      city,\n      weight,\n      frete,\n    };\n  },\n  created() {\n    // Implemente aqui o GET dos dados da API REST\n    // para que isso ocorra na inicialização da pagina\n\n    fetch(\"http://localhost:3000/transport\")\n      .then((response) => {\n        response.json().then((data) => {\n          this.data = data;\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    this.appName = \"Melhor Frete\";\n  },\n  methods: {\n    // Implemente aqui os metodos utilizados na pagina\n    methodFoo() {\n      console.log(this.appName);\n    },\n    handleSubmit(event) {\n      event.preventDefault();\n\n      // verificar se os campos estão preenchidos\n      if (this.city === \"Selecione o destino\" || this.weight === \"\") {\n        alert(\"Preencha todos os campos\");\n        return;\n      }\n\n      // calcular o frete\n      this.calculate();\n\n      this.showOutput = true;\n      // console.log(this.frete.menorValor);\n      // console.log(this.frete.maisRapido);\n    },\n    calculate() {\n      this.frete.menorValor = {\n        transportadora: this.data[0].name,\n        tempo: this.data[0].lead_time,\n        preco: this.data[0].cost_transport_light,\n      };\n\n      this.frete.maisRapido = {\n        transportadora: this.data[0].name,\n        tempo: this.data[0].lead_time,\n        preco: this.data[0].cost_transport_light,\n      };\n\n      if (this.weight > 100) {\n        this.frete.menorValor.preco = this.data[0].cost_transport_heavy;\n        this.frete.maisRapido.preco = this.data[0].cost_transport_heavy;\n      }\n\n      // encontrar frete com menor valor\n      for (let i = 0; i < this.data.length; i++) {\n        if (this.data[i].city == this.city) {\n          // console.log(\n          //   parseFloat(\n          //     this.data[i].cost_transport_heavy\n          //       .replace(\"R$ \", \"\")\n          //       .replace(\",\", \".\")\n          //   ) * this.weight\n          // );\n          // console.log(this.data[i].cost_transport_heavy);\n          const value =\n            this.convertToFloat(this.data[i].cost_transport_heavy) *\n            this.weight;\n          const oldValue =\n            this.convertToFloat(this.frete.menorValor.preco) * this.weight;\n\n          if (value < oldValue) {\n            this.frete.menorValor.transportadora = this.data[i].name;\n            this.frete.menorValor.tempo = this.data[i].lead_time;\n            this.frete.menorValor.preco = `R$ ${value}`;\n          }\n        }\n      }\n\n      // encontrar frete mais rápido\n      for (let i = 0; i < this.data.length; i++) {\n        if (this.data[i].city == this.city) {\n          if (\n            this.convertToFloat(this.data[i].lead_time) <\n            this.convertToFloat(this.frete.maisRapido.tempo)\n          ) {\n            this.frete.maisRapido.transportadora = this.data[i].name;\n            this.frete.maisRapido.tempo = this.data[i].lead_time;\n            this.frete.maisRapido.preco = `R$ ${\n              this.convertToFloat(this.data[i].cost_transport_light) *\n              this.weight\n            }`;\n          }\n        }\n      }\n    },\n    convertToFloat(value) {\n      return parseFloat(value.replace(\"R$ \", \"\").replace(\",\", \".\"));\n    },\n    clear(event) {\n      event.preventDefault();\n      this.showOutput = false;\n      this.city = \"Selecione o destino\";\n      this.weight = \"\";\n      this.frete = {\n        menorValor: {\n          transportadora: \"\",\n          tempo: \"\",\n          preco: \"\",\n        },\n        maisRapido: {\n          transportadora: \"\",\n          tempo: \"\",\n          preco: \"\",\n        },\n      };\n    },\n  },\n  watch: {\n    data() {\n      this.data.forEach((element) => {\n        this.citys.push({ city: element.city, key: element.id });\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.title .navbar {\n  background-color: #00aca6 !important;\n}\n\n.title .navbar-brand {\n  margin-left: 20px;\n}\n\n.title .navbar-brand img {\n  margin-right: 10px;\n  width: 30px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}